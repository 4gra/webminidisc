{"version":3,"sources":["images/chrome-icon.svg","webpack:///./src/services/atracdenc-worker.ts?dc3c","serviceWorker.ts","services/netmd.ts","services/registry.ts","redux/upload-dialog-feature.ts","redux/rename-dialog-feature.ts","redux/error-dialog-feature.ts","redux/convert-dialog-feature.ts","utils.ts","redux/app-feature.ts","redux/main-feature.ts","redux/store.ts","redux/actions.ts","services/atracdenc-worker.ts","components/about-dialog.tsx","components/topmenu.tsx","components/welcome.tsx","components/rename-dialog.tsx","components/upload-dialog.tsx","components/error-dialog.tsx","components/convert-dialog.tsx","components/main.tsx","components/app.tsx","services/audio-export.ts","index.tsx"],"names":["module","exports","Worker","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","console","log","state","controller","onUpdate","onSuccess","update","catch","error","require","NetMDUSBService","netmdInterface","openNewDevice","usb","iface","this","openPairedDevice","listContent","netMd","getDeviceName","finalize","index","newTitle","setTrackTitle","newName","getDiscTitle","oldName","_getDiscTitle","newNameWithGroups","replace","cacheTOC","setDiscTitle","syncTOC","eraseTrack","eraseDisc","title","data","format","progressCallback","updateProgress","written","encrypted","total","byteLength","w","webWorkerAsyncPacketIterator","makeGetAsyncPacketIteratorOnWorkerThread","encryptedBytes","mdTrack","MDTrack","download","writtenBytes","ServiceRegistry","slice","createSlice","name","initialState","visible","writtenProgress","encryptedProgress","totalProgress","trackTotal","trackConverting","trackCurrent","titleCurrent","titleConverting","reducers","setVisible","action","payload","setWriteProgress","setTrackProgress","current","converting","reducer","actions","enableBatching","setCurrentName","setIndex","setErrorMessage","setFormat","useShallowEqualSelector","selector","useSelector","shallowEqual","getPublicPathFor","script","process","mainView","loading","pairingFailed","pairingMessage","browserSupported","darkMode","key","defaultValue","res","localStorage","getItem","JSON","parse","e","loadPreference","aboutDialogVisible","setState","setLoading","setPairingFailed","setPairingMessage","setBrowserSupported","setDarkMode","value","setItem","stringify","showAboutDialog","disc","deviceName","setDisc","setDeviceName","store","configureStore","renameDialog","uploadDialog","errorDialog","convertDialog","appState","main","middleware","getDefaultMiddleware","dispatch","a","appStateActions","serviceRegistry","netmdService","batchActions","mainActions","WireformatDict","SP","Wireformat","pcm","LP2","lp2","LP105","l105kbps","LP4","lp4","Module","Transition","React","forwardRef","props","ref","Slide","direction","AboutDialog","useDispatch","Dialog","open","maxWidth","fullWidth","TransitionComponent","aria-labelledby","DialogTitle","id","DialogContent","DialogContentText","Link","rel","href","target","DialogActions","Button","onClick","appActions","TopMenu","useState","menuAnchorEl","setMenuAnchorEl","menuOpen","handleMenuClose","menuItems","push","MenuItem","renameDialogActions","wipeDisc","Fragment","IconButton","aria-label","aria-controls","aria-haspopup","event","currentTarget","Menu","anchorEl","keepMounted","onClose","useStyles","makeStyles","theme","position","flex","display","justifyContent","flexDirection","alignItems","button","marginTop","spacing","minWidth","chromeLogo","width","height","why","alignSelf","headBox","Welcome","classes","toLowerCase","showWhyUnsupported","setWhyUnsupported","Box","className","Typography","component","variant","align","color","getState","audioExportService","init","connect","pair","message","FormControl","style","visibility","FormHelperText","preventDefault","alt","src","ChromeIconPath","RenameDialog","renameDialogVisible","renameDialogTitle","renameDialogIndex","what","handleCancelRename","handleDoRename","renameDisc","renameTrack","TextField","autoFocus","label","type","onKeyDown","onChange","progressPerc","progressBar","uploadLabel","UploadDialog","progressValue","Math","floor","bufferValue","convertedValue","aria-describedby","LinearProgress","valueBuffer","ErrorDialog","errorDialogActions","container","formControl","ConvertDialog","handleClose","convertDialogActions","InputLabel","Select","labelId","ev","input","Input","files","wireformat","uploadDialogActions","updateProgressCallback","trackUpdate","length","updateTrack","conversionIterator","convertNext","i","f","converted","Promise","resolve","reject","prepare","export","file","errorMessage","j","item","upload","actionToDispatch","concat","errorDialogAction","convertAndUpload","add","bottom","right","overflowY","marginBottom","marginLeft","marginRight","outline","toolbar","breakpoints","up","toolbarLabel","toolbarHighlight","palette","secondary","backgroundColor","lighten","light","text","primary","dark","formatBadge","BadgeImpl","badge","colorPrimary","border","background","paper","padding","titleCell","overflow","textOverflow","backdrop","zIndex","drawer","EncodingName","Encoding","sp","Main","selected","setSelected","selectedCount","useEffect","uploadedFiles","setUploadedFiles","onDrop","useCallback","acceptedFiles","rejectedFiles","useDropzone","accept","noClick","getRootProps","getInputProps","isDragActive","tracks","groups","group","track","encoding","duration","formatTimeFromFrames","handleRenameDoubleClick","selectedIndex","currentName","getTracks","find","left","Toolbar","clsx","Checkbox","indeterminate","checked","map","t","inputProps","Tooltip","indexes","sort","reverse","deleteTrack","disabled","Table","size","TableHead","TableRow","TableCell","TableBody","hover","includes","onDoubleClick","filter","Backdrop","Fab","layout","copyright","minidiscLogo","darkTheme","createMuiTheme","contrastText","lightTheme","App","ThemeProvider","CssBaseline","Paper","undefined","Date","getFullYear","data-via","data-hashtags","data-dnt","data-show-count","CircularProgress","AtracdencProcess","worker","messageCallback","onmessage","handleMessage","bind","postMessage","bitrate","eventData","result","WorkerGlobalScope","self","others","importScripts","m","setLogger","msg","stream","dataArray","Uint8Array","FS","writeFile","callMain","fileStat","stat","tmp","outAt3FileStream","read","close","buffer","AtracdencWorker","FFMpegAudioExportService","ffmpegProcess","atracdencProcess","loglines","inFileName","outFileNameNoExt","setLogging","createWorker","logger","corePath","workerPath","load","ext","split","Error","write","transcode","audioFormatRegex","inputFormatRegex","line","outFileName","encode","addEventListener","returnValue","ondisconnect","ReactDOM","render","document","getElementById","URL","origin","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"mFAAAA,EAAOC,QAAU,IAA0B,yC,gKCA3CD,EAAOC,QAAU,WACf,OAAO,IAAIC,OAAO,IAA0B,oC,qFCWxCC,EAAcC,QACa,cAA7BC,OAAOC,SAASC,UAEiB,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAyCvC,SAASC,EAAgBC,EAAeC,GACpCC,UAAUC,cACLC,SAASJ,GACTK,MAAK,SAAAC,GACFA,EAAaC,cAAgB,WACzB,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WAC7BC,QAAQC,IAAI,eAAgBJ,EAAiBK,OACd,cAA3BL,EAAiBK,QACbX,UAAUC,cAAcW,YAIxBH,QAAQC,IACJ,iHAKAX,GAAUA,EAAOc,UACjBd,EAAOc,SAAST,KAMpBK,QAAQC,IAAI,sCAGRX,GAAUA,EAAOe,WACjBf,EAAOe,UAAUV,QAMrCA,EAAaW,YAEhBC,OAAM,SAAAC,GACHR,QAAQQ,MAAM,4CAA6CA,M,6DCjGjE3B,EAAS4B,EAAQ,KAoBVC,EAAb,iDACYC,oBADZ,qLAI0BC,wBAAcrB,UAAUsB,KAJlD,UAKsB,QADVC,EAJZ,kDAMmB,GANnB,cAQQC,KAAKJ,eAAiBG,EAR9B,mBASe,GATf,sQAa0BE,2BAAiBzB,UAAUsB,KAbrD,UAcsB,QADVC,EAbZ,kDAemB,GAfnB,cAiBQC,KAAKJ,eAAiBG,EAjB9B,mBAkBe,GAlBf,oQAsBqBG,sBAAYF,KAAKJ,gBAtBtC,8SA0BqBI,KAAKJ,eAAgBO,MAAMC,gBA1BhD,ySA8BcJ,KAAKJ,eAAgBO,MAAME,WA9BzC,iLAiCsBC,EAAeC,GAjCrC,iFAkCcP,KAAKJ,eAAgBY,cAAcF,EAAOC,GAlCxD,mLAqCqBE,GArCrB,yFAsC8BT,KAAKJ,eAAgBc,eAtCnD,cAsCcC,EAtCd,gBAuCsCX,KAAKJ,eAAgBgB,gBAvC3D,cAwCQC,GADIA,EAvCZ,QAwC8CC,QAAQH,EAASF,GAxC/D,SAyCcT,KAAKJ,eAAgBmB,WAzCnC,wBA0Ccf,KAAKJ,eAAgBoB,aAAaH,GA1ChD,yBA2Ccb,KAAKJ,eAAgBqB,UA3CnC,mLA8CsBX,GA9CtB,iFA+CcN,KAAKJ,eAAgBsB,WAAWZ,GA/C9C,kQAmDcN,KAAKJ,eAAgBuB,YAnDnC,4KAuDQC,EACAC,EACAC,EACAC,GA1DR,UA+DiBC,EA/DjB,8EA+DiBA,EA/DjB,WAgEYD,EAAiB,CAAEE,UAASC,YAAWC,WAJvCA,EAAQN,EAAKO,WACbH,EAAU,EACVC,EAAY,EAKZG,EAAI,IAAI/D,EAERgE,EAA+BC,mDAAyCF,GAAG,YAAyB,IAAtBG,EAAqB,EAArBA,eAC9EN,EAAYM,EACZR,OAGAS,EAAU,IAAIC,UAAQd,EAAOE,EAAQD,EAAM,OAASS,GA1EhE,SA4EcK,mBAASnC,KAAKJ,eAAiBqC,GAAS,YAAuB,IAApBG,EAAmB,EAAnBA,aAC7CX,EAAUW,EACVZ,OA9EZ,oHCbea,EAF0B,G,wBCwB5BC,EAAQC,YAAY,CAC7BC,KAAM,eACNC,aAjBqC,CACrCC,SAAS,EAETC,gBAAiB,EACjBC,kBAAmB,EACnBC,cAAe,EAGfC,WAAY,EACZC,gBAAiB,EACjBC,aAAc,EACdC,aAAc,GACdC,gBAAiB,IAMjBC,SAAU,CACNC,WAAY,SAACjE,EAAOkE,GAChBlE,EAAMuD,QAAUW,EAAOC,SAE3BC,iBAAkB,SAACpE,EAAOkE,GACtBlE,EAAMyD,kBAAoBS,EAAOC,QAAQ5B,UACzCvC,EAAMwD,gBAAkBU,EAAOC,QAAQ7B,QACvCtC,EAAM0D,cAAgBQ,EAAOC,QAAQ3B,OAEzC6B,iBAAkB,SACdrE,EACAkE,GAEAlE,EAAM2D,WAAaO,EAAOC,QAAQ3B,MAClCxC,EAAM6D,aAAeK,EAAOC,QAAQG,QACpCtE,EAAM4D,gBAAkBM,EAAOC,QAAQI,WACvCvE,EAAM8D,aAAeI,EAAOC,QAAQL,aACpC9D,EAAM+D,gBAAkBG,EAAOC,QAAQJ,oBAKpCS,EAAqBrB,EAArBqB,QAASC,EAAYtB,EAAZsB,QACTC,2BAAeF,GC3CjBrB,EAAQC,YAAY,CAC7BC,KAAM,eACNC,aARoC,CACpCC,SAAS,EACTtB,MAAO,GACPd,OAAQ,GAMR6C,SAAU,CACNC,WAAY,SAACjE,EAA0BkE,GACnClE,EAAMuD,QAAUW,EAAOC,SAE3BQ,eAAgB,SAAC3E,EAA0BkE,GACvClE,EAAMiC,MAAQiC,EAAOC,SAEzBS,SAAU,SAAC5E,EAA0BkE,GACjClE,EAAMmB,MAAQ+C,EAAOC,YAKlBK,EAAqBrB,EAArBqB,QAASC,EAAYtB,EAAZsB,QACTC,2BAAeF,GCnBxBrB,EAAQC,YAAY,CACtBC,KAAM,cACNC,aAPmC,CACnCC,SAAS,EACTjD,MAAM,IAMN0D,SAAU,CACNC,WAAY,SAACjE,EAAOkE,GAChBlE,EAAMuD,QAAUW,EAAOC,SAE3BU,gBAAiB,SAAC7E,EAAOkE,GACrBlE,EAAMM,MAAN,UAAiB4D,EAAOC,aAKrBM,EAAqBtB,EAArBsB,QAASD,EAAYrB,EAAZqB,QACTE,2BAAeF,GCdxBrB,EAAQC,YAAY,CACtBC,KAAM,gBACNC,aAPuC,CACvCC,SAAS,EACTpB,OAAO,OAMP6B,SAAU,CACNC,WAAY,SAACjE,EAAOkE,GAChBlE,EAAMuD,QAAUW,EAAOC,SAE3BW,UAAW,SAAC9E,EAAOkE,GACflE,EAAMmC,OAAS+B,EAAOC,YAKnBM,EAAqBtB,EAArBsB,QAASD,EAAYrB,EAAZqB,QACTE,2BAAeF,GClBvB,SAASO,EAAiEC,GAC7E,OAAOC,YAAYD,EAAUE,KAe1B,SAASC,EAAiBC,GAC7B,MAAM,GAAN,OAAUC,eAAV,YAAoCD,GCVxC,IAAM9B,EAAyB,CAC3BgC,SAAU,UACVC,SAAS,EACTC,eAAe,EACfC,eAAe,GACfC,kBAAkB,EAClBC,SDWG,SAA2BC,EAAaC,GAC3C,IAAIC,EAAMC,aAAaC,QAAQJ,GAC/B,GAAY,OAARE,EACA,OAAOD,EAEP,IACI,OAAOI,KAAKC,MAAMJ,GACpB,MAAOK,GACL,OAAON,GCnBLO,CAAe,YAAY,GACrCC,oBAAoB,GAGXlD,EAAQC,YAAY,CAC7BC,KAAM,MACNC,eACAU,SAAU,CACNsC,SAAU,SAACtG,EAAOkE,GACdlE,EAAMsF,SAAWpB,EAAOC,SAE5BoC,WAAY,SAACvG,EAAOkE,GAChBlE,EAAMuF,QAAUrB,EAAOC,SAE3BqC,iBAAkB,SAACxG,EAAOkE,GACtBlE,EAAMwF,cAAgBtB,EAAOC,SAEjCsC,kBAAmB,SAACzG,EAAOkE,GACvBlE,EAAMyF,eAAiBvB,EAAOC,SAElCuC,oBAAqB,SAAC1G,EAAOkE,GACzBlE,EAAM0F,iBAAmBxB,EAAOC,SAEpCwC,YAAa,SAAC3G,EAAOkE,GDhBtB,IAAwB0B,EAAagB,ECiBhC5G,EAAM2F,SAAWzB,EAAOC,QDjBLyB,ECkBJ,WDlBiBgB,ECkBL5G,EAAM2F,SDjBzCI,aAAac,QAAQjB,EAAKK,KAAKa,UAAUF,KCmBrCG,gBAAiB,SAAC/G,EAAOkE,GACrBlE,EAAMqG,mBAAqBnC,EAAOC,YAK/BK,EAAqBrB,EAArBqB,QAASC,EAAYtB,EAAZsB,QACTC,2BAAeF,GC1CjBrB,EAAQC,YAAY,CAC7BC,KAAM,OACNC,aAP4B,CAC5B0D,KAAM,KACNC,WAAY,IAMZjD,SAAU,CACNkD,QAAS,SAAClH,EAAOkE,GACblE,EAAMgH,KAAO9C,EAAOC,SAExBgD,cAAe,SAACnH,EAAOkE,GACnBlE,EAAMiH,WAAa/C,EAAOC,YAKvBK,EAAqBrB,EAArBqB,QAASC,EAAYtB,EAAZsB,QACTC,2BAAeF,GCpBjB4C,EAAQC,YAAe,CAChC7C,QAAS,CACL8C,eACAC,eACAC,cACAC,gBACAC,WACAC,QAEJC,WAAW,YAAKC,iB,wGC0Bb,SAAS9G,KACZ,8CAAO,WAAe+G,GAAf,iBAAAC,EAAA,6DAEHD,EAASE,EAAgBzB,YAAW,IAFjC,SAGc0B,EAAgBC,aAAcnH,cAH5C,cAGCiG,EAHD,gBAIoBiB,EAAgBC,aAAcjH,gBAJlD,OAICgG,EAJD,OAKHa,EAASK,uBAAa,CAACC,EAAYlB,QAAQF,GAAOoB,EAAYjB,cAAcF,GAAae,EAAgBzB,YAAW,MALjH,2CAAP,mDAAM,GAiDH,IAAM8B,GAA8C,CACvDC,GAAIC,aAAWC,IACfC,IAAKF,aAAWG,IAChBC,MAAOJ,aAAWK,SAClBC,IAAKN,aAAWO,K,OCjEZC,G,wHCjBFC,GAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC3D,OAAO,kBAACC,GAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASD,OAGlCI,GAAc,SAACJ,GACxB,IAAMrB,EAAW0B,cAEbjG,EAAUwB,GAAwB,SAAA/E,GAAK,OAAIA,EAAM0H,SAASrB,sBAM9D,OACI,kBAACoD,GAAA,EAAD,CACIC,KAAMnG,EACNoG,SAAU,KACVC,WAAW,EACXC,oBAAqBb,GACrBc,kBAAgB,4BAEhB,kBAACC,GAAA,EAAD,CAAaC,GAAG,4BAAhB,sBACA,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,+CACA,4BACI,4BACI,kBAACC,GAAA,EAAD,CAAMC,IAAI,sBAAsBC,KAAK,0BAA0BC,OAAO,UAAtE,UAEQ,IAHZ,MAIQ,IACJ,kBAACH,GAAA,EAAD,CAAMC,IAAI,sBAAsBC,KAAK,qCAAqCC,OAAO,UAAjF,YALJ,4DAUA,4BACI,kBAACH,GAAA,EAAD,CAAMC,IAAI,sBAAsBC,KAAK,2CAA2CC,OAAO,UAAvF,aADJ,0DAMA,4BACI,kBAACH,GAAA,EAAD,CAAMC,IAAI,sBAAsBC,KAAK,0BAA0BC,OAAO,UAAtE,cADJ,sDAMA,4BACI,kBAACH,GAAA,EAAD,CAAMC,IAAI,sBAAsBC,KAAK,wCAAwCC,OAAO,UAApF,YADJ,yDAMA,4BACI,kBAACH,GAAA,EAAD,CAAMC,IAAI,sBAAsBC,KAAK,6CAA6CC,OAAO,UAAzF,kBADJ,4CAMA,4BACI,kBAACH,GAAA,EAAD,CAAMC,IAAI,sBAAsBC,KAAK,2BAA2BC,OAAO,UAAvE,eADJ,mCAOJ,kBAACJ,GAAA,EAAD,oBACA,4BACI,iDACuB,IACnB,kBAACC,GAAA,EAAD,CAAMC,IAAI,sBAAsBC,KAAK,yCAAyCC,OAAO,UAArF,2CAIJ,iDACuB,IACnB,kBAACH,GAAA,EAAD,CACIC,IAAI,sBACJC,KAAK,iFACLC,OAAO,UAHX,4BAUZ,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQC,QA9EA,WAChB3C,EAAS4C,EAAW3D,iBAAgB,MA6E5B,Y,mDCvFH4D,GAAU,WACnB,IAAM7C,EAAW0B,cAEXlE,EAAaP,GAAwB,SAAA/E,GAAK,OAAIA,EAAM0H,YAApDpC,SACF0B,EAAOjC,GAAwB,SAAA/E,GAAK,OAAIA,EAAM2H,KAAKX,QAJzB,EAMUiC,IAAM2B,SAA6B,MAN7C,oBAMvBC,EANuB,KAMTC,EANS,KAOxBC,EAAWlM,QAAQgM,GAKnBG,EAAkB,WACpBF,EAAgB,OAiCdG,EAAY,GAoClB,MAnCiB,SAAb3F,IACA2F,EAAUC,KACN,kBAACC,GAAA,EAAD,CAAUvF,IAAI,SAAS6E,QA5BT,WAClB3C,EAAS/G,MACTiK,MA0BI,YAIJC,EAAUC,KACN,kBAACC,GAAA,EAAD,CAAUvF,IAAI,QAAQ6E,QA5BL,WAAO,IAAD,EAC3B3C,EACIK,uBAAa,CACTiD,EAAoBnH,YAAW,GAC/BmH,EAAoBzG,eAApB,iBAAmCqC,QAAnC,IAAmCA,OAAnC,EAAmCA,EAAM/E,aAAzC,YACAmJ,EAAoBxG,UAAU,MAGtCoG,MAoBI,gBAIJC,EAAUC,KACN,kBAACC,GAAA,EAAD,CAAUvF,IAAI,OAAO6E,QA3CN,WACnB3C,EHqDJ,uCAAO,WAAeA,GAAf,eAAAC,EAAA,6DACKG,EAAiBD,EAAjBC,aACRJ,EAASE,EAAgBzB,YAAW,IAFjC,SAGG2B,EAAcmD,WAHjB,OAIHtK,KAAc+G,GAJX,2CAAP,mDAAM,IGpDFkD,MAyCI,cAIJC,EAAUC,KACN,kBAACC,GAAA,EAAD,CAAUvF,IAAI,OAAO6E,QA3BV,WACf3C,EAAS4C,EAAWpE,SAAS,YAC7B0E,MAyBI,UAKRC,EAAUC,KACN,kBAACC,GAAA,EAAD,CAAUvF,IAAI,QAAQ6E,QA7BF,WACpB3C,EAAS4C,EAAW3D,iBAAgB,IACpCiE,MA2BA,UAIJC,EAAUC,KACN,kBAACC,GAAA,EAAD,CAAUvF,IAAI,SAAS6E,QAASO,GAC5B,kBAACb,GAAA,EAAD,CAAMC,IAAI,sBAAsBC,KAAK,2CAA2CC,OAAO,UAAvF,uBAOJ,kBAAC,IAAMgB,SAAP,KACI,kBAACC,GAAA,EAAD,CAAYC,aAAW,UAAUC,gBAAc,eAAeC,gBAAc,OAAOjB,QA5EnE,SAACkB,GACrBb,EAAgBa,EAAMC,iBA4Ed,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,CAAM7B,GAAG,eAAe8B,SAAUjB,EAAckB,aAAW,EAACrC,KAAMqB,EAAUiB,QAAShB,GAChFC,K,qBCrFXgB,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACnCxE,KAAM,CACFyE,SAAU,WACVC,KAAM,WACNC,QAAS,OACTC,eAAgB,SAChBC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,UAAWR,EAAMS,QAAQ,GACzBC,SAAU,KAEdD,QAAS,CACLD,UAAWR,EAAMS,QAAQ,IAE7BE,WAAY,CACRH,UAAWR,EAAMS,QAAQ,GACzBG,MAAO,GACPC,OAAQ,IAEZC,IAAK,CACDC,UAAW,aACXP,UAAWR,EAAMS,QAAQ,IAE7BO,QAAS,CACLb,QAAS,OACTC,eAAgB,qBAIXa,GAAU,SAACjE,GACpB,IAAMkE,EAAUpB,KAEVnE,EAAW0B,cAHiB,EAI0BzE,GAAwB,SAAA/E,GAAK,OAAIA,EAAM0H,YAA3FhC,EAJ0B,EAI1BA,iBAAkBF,EAJQ,EAIRA,cAAeC,EAJP,EAIOA,eACrCA,EAAe6H,cAAcrO,MAAM,UALL,MAUc2L,oBAAS,GAVvB,oBAU3B2C,EAV2B,KAUPC,EAVO,KAgBlC,OACI,kBAAC,IAAMlC,SAAP,KACI,kBAACmC,GAAA,EAAD,CAAKC,UAAWL,EAAQF,SACpB,kBAACQ,GAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,MAAnC,gBAGA,kBAAC,GAAD,OAEJ,kBAACF,GAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,SAAnC,mCAGA,kBAACJ,GAAA,EAAD,CAAKC,UAAWL,EAAQ1F,MACnBjC,EACG,kBAAC,IAAM4F,SAAP,KACI,kBAACqC,GAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,YAAYC,MAAM,SAASJ,UAAWL,EAAQT,SAAjF,iDAIA,kBAACpC,GAAA,EAAD,CAAQqD,QAAQ,YAAYE,MAAM,UAAUtD,QAAS,kBAAM3C,EJvE/E,uCAAO,WAAeA,EAAuBkG,GAAtC,eAAAjG,EAAA,6DACHD,EAASE,EAAgBxB,kBAAiB,IADvC,SAGGyB,EAAgBgG,mBAAoBC,OAHvC,gCAMuBjG,EAAgBC,aAAciG,UANrD,0CAQKrG,EAASE,EAAgB1B,SAAS,SARvC,6EAYCxG,QAAQQ,MAAR,MAZD,mCAiBoB2H,EAAgBC,aAAckG,OAjBlD,2CAmBKtG,EAASE,EAAgB1B,SAAS,SAnBvC,2BAsBCwB,EAASK,uBAAa,CAACH,EAAgBvB,kBAAhB,qBAAwDuB,EAAgBxB,kBAAiB,MAtBjH,mDAwBC1G,QAAQQ,MAAR,MACI+N,EAAU,KAAeA,QAC7BvG,EAASK,uBAAa,CAACH,EAAgBvB,kBAAkB4H,GAAUrG,EAAgBxB,kBAAiB,MA1BrG,kEAAP,qDAAM,KIuE2FkH,UAAWL,EAAQX,QAAhG,WAIA,kBAAC4B,GAAA,EAAD,CAAahO,OAAO,EAAMoN,UAAWL,EAAQT,QAAS2B,MAAO,CAAEC,WAAYhJ,EAAgB,UAAY,WACnG,kBAACiJ,GAAA,EAAD,KAAiBhJ,KAIzB,kBAAC,IAAM6F,SAAP,KACI,kBAACqC,GAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,YAAYC,MAAM,SAASJ,UAAWL,EAAQT,SAAjF,yCAEI,kBAACzC,GAAA,EAAD,CAAMC,IAAI,sBAAsBC,KAAK,IAAII,QAnC1C,SAACkB,GACpBA,EAAM+C,iBACNlB,GAAkB,KAiCE,cAKJ,kBAACrD,GAAA,EAAD,CAAMC,IAAI,sBAAsBE,OAAO,SAASD,KAAK,kCACjD,yBAAKsE,IAAI,cAAcC,IAAKC,KAAgBnB,UAAWL,EAAQP,cAGnE,kBAACa,GAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,YAAYC,MAAM,SAASJ,UAAWL,EAAQT,SAAjF,YACc,IACV,kBAACzC,GAAA,EAAD,CAAMC,IAAI,sBAAsBE,OAAO,SAASD,KAAK,kCAArD,UAEQ,IAJZ,WAQCkD,EACG,oCACI,kBAACI,GAAA,EAAD,CAAYC,UAAU,IAAIC,QAAQ,QAAQH,UAAWL,EAAQJ,KAA7D,qDACuD,IACnD,kBAAC9C,GAAA,EAAD,CAAMC,IAAI,sBAAsBE,OAAO,SAASD,KAAK,kCAArD,UAEQ,IAJZ,MAKQ,IACJ,kBAACF,GAAA,EAAD,CAAMC,IAAI,sBAAsBE,OAAO,SAASD,KAAK,4BAArD,eANJ,KAWA,4BACI,qHACA,0GAGR,OAIhB,kBAAC,GAAD,Q,8LCxHNrB,GAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC3D,OAAO,kBAACC,GAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASD,OAGlC2F,GAAe,SAAC3F,GACzB,IAAIrB,EAAW0B,cAEXuF,EAAsBhK,GAAwB,SAAA/E,GAAK,OAAIA,EAAMsH,aAAa/D,WAC1EyL,EAAoBjK,GAAwB,SAAA/E,GAAK,OAAIA,EAAMsH,aAAarF,SACxEgN,EAAoBlK,GAAwB,SAAA/E,GAAK,OAAIA,EAAMsH,aAAanG,SAEtE+N,EAAOD,EAAoB,EAApB,eAEPE,EAAqB,WACvBrH,EAASsD,EAAoBnH,YAAW,KAGtCmL,EAAiB,WAEftH,EADAmH,EAAoB,EL8BzB,YAAuD,IAAjC3N,EAAgC,EAAhCA,QACzB,8CAAO,WAAewG,GAAf,eAAAC,EAAA,6DACKG,EAAiBD,EAAjBC,aADL,SAEGA,EAAcmH,WAAW/N,GAF5B,OAGHwG,EAASsD,EAAoBnH,YAAW,IACxClD,KAAc+G,GAJX,2CAAP,mDAAM,IK9BWuH,CAAW,CAAE/N,QAAS0N,ILoBpC,YAA8E,IAAvD7N,EAAsD,EAAtDA,MAAOG,EAA+C,EAA/CA,QACjC,8CAAO,WAAewG,GAAf,eAAAC,EAAA,6DACKG,EAAiBD,EAAjBC,aADL,SAEGA,EAAcoH,YAAYnO,EAAOG,GAFpC,OAGHwG,EAASsD,EAAoBnH,YAAW,IACxClD,KAAc+G,GAJX,2CAAP,mDAAM,IKnBWwH,CAAY,CAAEnO,MAAO8N,EAAmB3N,QAAS0N,MAIlE,OACI,kBAACvF,GAAA,EAAD,CACIC,KAAMqF,EACN/C,QAASmD,EACTxF,SAAU,KACVC,WAAW,EACXC,oBAAqBb,GACrBc,kBAAgB,uBAEhB,kBAACC,GAAA,EAAD,CAAaC,GAAG,uBAAhB,UAA8CkF,GAC9C,kBAACjF,GAAA,EAAD,KACI,kBAACsF,GAAA,EAAD,CACIC,WAAS,EACTxF,GAAG,OACHyF,MAAK,UAAKP,EAAL,SACLQ,KAAK,OACL9F,WAAS,EACThD,MAAOoI,EACPW,UAAW,SAAAhE,GACP,UAAAA,EAAM/F,KAAmBwJ,KAE7BQ,SAAU,SAAAjE,GACN7D,EAASsD,EAAoBzG,eAAegH,EAAMrB,OAAO1D,YAIrE,kBAAC2D,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQC,QAAS0E,GAAjB,UACA,kBAAC3E,GAAA,EAAD,CAAQuD,MAAO,UAAWtD,QAAS2E,GAAnC,a,UCtDVnD,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACnC0D,aAAc,CACVlD,UAAWR,EAAMS,QAAQ,IAE7BkD,YAAa,CACTnD,UAAWR,EAAMS,QAAQ,IAE7BmD,YAAa,CACTpD,UAAWR,EAAMS,QAAQ,QAI3B5D,GAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC3D,OAAO,kBAACC,GAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASD,OAGlC6G,GAAe,SAAC7G,GACzB,IAAMkE,EAAUpB,KADuB,EAcnClH,GAAwB,SAAA/E,GAAK,OAAIA,EAAMuH,gBAVvChE,EAJmC,EAInCA,QACAC,EALmC,EAKnCA,gBACAC,EANmC,EAMnCA,kBACAC,EAPmC,EAOnCA,cAEAC,EATmC,EASnCA,WACAE,EAVmC,EAUnCA,aACAD,EAXmC,EAWnCA,gBACAE,EAZmC,EAYnCA,aACAC,EAbmC,EAanCA,gBAGAkM,EAAgBC,KAAKC,MAAO3M,EAAkBE,EAAiB,KAC/D0M,EAAcF,KAAKC,MAAO1M,EAAoBC,EAAiB,KAC/D2M,EAAiBH,KAAKC,MAAOvM,EAAkBD,EAAc,KACjE,OACI,kBAAC8F,GAAA,EAAD,CACIC,KAAMnG,EACNoG,SAAU,KACVC,WAAW,EACXC,oBAAqBb,GACrBc,kBAAgB,2BAChBwG,mBAAiB,kCAEjB,kBAACvG,GAAA,EAAD,CAAaC,GAAG,4BAAhB,gBACA,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmBF,GAAG,kCACE,MAAnBqG,GAA0BzM,IAAoBD,EAA9C,4CAEmBC,EAAkB,EAFrC,eAE6CD,EAF7C,aAE4DI,IAEjE,kBAACwM,GAAA,EAAD,CACI7C,UAAWL,EAAQyC,YACnBjC,QAA4B,IAAnBwC,EAAuB,gBAAkB,cAClDtC,MAAM,UACNnH,MAAOyJ,IAEX,kBAAC5C,GAAA,EAAD,CAAKC,UAAWL,EAAQwC,cAAeQ,EAAvC,KAEA,kBAACnG,GAAA,EAAD,CAAmBF,GAAG,iCAAiC0D,UAAWL,EAAQ0C,aAA1E,aACelM,EADf,OACiCF,EADjC,KAC+CG,GAE/C,kBAACyM,GAAA,EAAD,CACI7C,UAAWL,EAAQyC,YACnBjC,QAAQ,SACRE,MAAM,YACNnH,MAAOqJ,EACPO,YAAaJ,IAEjB,kBAAC3C,GAAA,EAAD,CAAKC,UAAWL,EAAQwC,cAAeI,EAAvC,MAEJ,kBAAC1F,GAAA,EAAD,QCtENvB,GAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC3D,OAAO,kBAACC,GAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASD,OAGlCsH,GAAc,SAACtH,GACxB,IAAMrB,EAAW0B,cADqB,EAGbzE,GAAwB,SAAA/E,GAAK,OAAIA,EAAMwH,eAA1DjE,EAHgC,EAGhCA,QAASjD,EAHuB,EAGvBA,MAMf,OACI,kBAACmJ,GAAA,EAAD,CACIC,KAAMnG,EACNoG,SAAU,KACVC,WAAW,EACXC,oBAAqBb,GACrBc,kBAAgB,2BAChBwG,mBAAiB,kCAEjB,kBAACvG,GAAA,EAAD,CAAaC,GAAG,4BAAhB,SACA,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAmBF,GAAG,kCAAkC1J,IAE5D,kBAACiK,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQC,QAlBA,WAChB3C,EAAS4I,EAAmBzM,YAAW,MAiB/B,Y,8BCrBV+E,GAAaC,IAAMC,YAAW,SAAoBC,EAAOC,GAC3D,OAAO,kBAACC,GAAA,EAAD,eAAOC,UAAU,KAAKF,IAAKA,GAASD,OAGzC8C,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACnCwE,UAAW,CACPrE,QAAS,OACTE,cAAe,OAEnBoE,YAAa,CACT/D,SAAU,SAILgE,GAAgB,SAAC1H,GAC1B,IAAMrB,EAAW0B,cACX6D,EAAUpB,KAFuC,EAI7BlH,GAAwB,SAAA/E,GAAK,OAAIA,EAAMyH,iBAA3DlE,EAJiD,EAIjDA,QAASpB,EAJwC,EAIxCA,OAET2O,EAAc,WAChBhJ,EAASiJ,EAAqB9M,YAAW,KAY7C,OACI,kBAACwF,GAAA,EAAD,CACIC,KAAMnG,EACNoG,SAAU,KACVC,WAAW,EACXC,oBAAqBb,GACrBc,kBAAgB,6BAChBwG,mBAAiB,oCAEjB,kBAACvG,GAAA,EAAD,CAAaC,GAAG,8BAAhB,mBACA,kBAACC,GAAA,EAAD,KACI,kBAACqE,GAAA,EAAD,CAAaZ,UAAWL,EAAQuD,aAC5B,kBAACI,GAAA,EAAD,CAAYjD,MAAM,YAAY/D,GAAG,yBAAjC,UAGA,kBAACiH,GAAA,EAAD,CACIC,QAAQ,8BACRlH,GAAG,wBACHpD,MAAOzE,EACP4L,MAAM,YACN6B,SA7BC,SAACuB,GAClBrJ,EAASiJ,EAAqBjM,UAAUqM,EAAG7G,OAAO1D,SA6BlCwK,MAAO,kBAACC,GAAA,EAAD,OAEP,kBAAClG,GAAA,EAAD,CAAUvE,MAAK,MAAf,MACA,kBAACuE,GAAA,EAAD,CAAUvE,MAAK,OAAf,OACA,kBAACuE,GAAA,EAAD,CAAUvE,MAAK,OAAf,UAIZ,kBAAC2D,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAQC,QAASqG,GAAjB,UACA,kBAACtG,GAAA,EAAD,CAAQC,QApCE,WAClBqG,IACAhJ,ERkDD,SAA0BwJ,EAAenP,GAC5C,8CAAO,WAAe2F,EAAuBkG,GAAtC,qDAAAjG,EAAA,sDACKkG,EAAqChG,EAArCgG,mBAAoB/F,EAAiBD,EAAjBC,aACtBqJ,EAAalJ,GAAelG,GAElC2F,EAAS0J,EAAoBvN,YAAW,IAElCwN,EAAyB,SAAC,GAA0F,IAAxFnP,EAAuF,EAAvFA,QAASC,EAA8E,EAA9EA,UAAWC,EAAmE,EAAnEA,MAClDsF,EAAS0J,EAAoBpN,iBAAiB,CAAE9B,UAASC,YAAWC,YAGpEkP,EAMA,CACApN,QAAS,EACTC,WAAY,EACZ/B,MAAO8O,EAAMK,OACb7N,aAAc,GACdC,gBAAiB,IAEf6N,EAAc,WAChB9J,EAAS0J,EAAoBnN,iBAAiBqN,KAG9CG,EA3BD,gCAAA9J,EAAA,MA2BsB,WAAgBuJ,GAAhB,QAIZQ,EAJY,WAAA/J,EAAA,sDAIZ+J,EAJY,WAKjB,GAAIC,IAAMT,EAAMK,OAIZ,OAHAD,EAAYnN,WAAawN,EACzBL,EAAY3N,gBAAZ,QACA6N,IAIJ,IAAII,EAAIV,EAAMS,GACdL,EAAYnN,WAAawN,EACzBL,EAAY3N,gBAAkBiO,EAAE3O,KAChCuO,IACAG,IAEAE,EAAU/G,KACN,IAAIgH,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,eAAArK,EAAA,+EAGEkG,EAAoBoE,QAAQL,GAH9B,uBAIS/D,EAAoBqE,OAAO,CAAEnQ,WAJtC,OAIJD,EAJI,OAKJ4P,IACAK,EAAQ,CAAEI,KAAMP,EAAG9P,KAAMA,IANrB,kDAQJ5B,EAAK,KACLkS,EAAY,UAAMR,EAAE3O,KAAR,wCACZ+O,EAAO,EAAD,IAVF,0DAAZ,2DAlBJH,EAA0D,GAE1DF,EAAI,EA+BRD,IAEIW,EAAI,EApCa,YAqCdA,EAAIR,EAAUN,QArCA,iBAsCjB,OAtCiB,SAsCLM,EAAUQ,GAtCL,cAuCVR,EAAUQ,GACjBA,IAxCiB,2DA3BtB,sDAwECD,EAxED,GAyECT,EAAI,EAzEL,mCA0EoBF,EAAmBP,IA1EvC,mIA2ESiB,GADGG,EA1EZ,GA2ESH,KAAMrQ,EAASwQ,EAATxQ,KAEdwP,EAAYpN,QAAUyN,IACtBL,EAAY5N,aAAeyO,EAAKlP,KAChCuO,IACAH,EAAuB,CAAEnP,QAAS,EAAGC,UAAW,EAAGC,MAAO,MAhF3D,2BAkFW0F,QAlFX,IAkFWA,OAlFX,EAkFWA,EAAcyK,OAAOJ,EAAKlP,KAAMnB,EAAMqP,EAAYE,GAlF7D,kEAoFKnR,EAAK,KACLkS,EAAY,UAAMD,EAAKlP,KAAX,+BArFjB,wUA0FCuP,EAAgC,CAACpB,EAAoBvN,YAAW,IAEhE3D,IACAR,QAAQQ,MAAMA,GACdsS,EAAmBA,EAAiBC,OAAO,CACvCC,EAAkB7O,YAAW,GAC7B6O,EAAkBjO,gBAAgB2N,MAI1C1K,EAASK,uBAAayK,IACtB7R,KAAc+G,GArGX,qFAAP,qDAAM,GQnDOiL,CAAiB5J,EAAMmI,MAAOnP,MAkC/B,S,oBC3CV8J,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACnC6G,IAAK,CACD5G,SAAU,WACV6G,OAAQ9G,EAAMS,QAAQ,GACtBsG,MAAO/G,EAAMS,QAAQ,IAEzBjF,KAAM,CACFwL,UAAW,OACX9G,KAAM,WACN+G,aAAcjH,EAAMS,QAAQ,GAC5ByG,WAAYlH,EAAMS,SAAS,GAC3B0G,YAAanH,EAAMS,SAAS,GAC5B2G,QAAS,QAEbC,QAAQ,aACJ7G,UAAWR,EAAMS,QAAQ,GACzByG,WAAYlH,EAAMS,SAAS,GAC3B0G,YAAanH,EAAMS,SAAS,IAC3BT,EAAMsH,YAAYC,GAAG,IAAyB,EAAnBvH,EAAMS,QAAQ,IAAU,CAChDyG,WAAYlH,EAAMS,SAAS,GAC3B0G,YAAanH,EAAMS,SAAS,KAGpC+G,aAAc,CACVtH,KAAM,YAEVuH,iBAC2B,UAAvBzH,EAAM0H,QAAQnE,KACR,CACI3B,MAAO5B,EAAM0H,QAAQC,UAAUnM,KAC/BoM,gBAAiBC,aAAQ7H,EAAM0H,QAAQC,UAAUG,MAAO,MAE5D,CACIlG,MAAO5B,EAAM0H,QAAQK,KAAKC,QAC1BJ,gBAAiB5H,EAAM0H,QAAQC,UAAUM,MAEvDjH,QAAS,CACLb,QAAS,OACTC,eAAgB,iBAEpBK,QAAS,CACLD,UAAWR,EAAMS,QAAQ,IAE7ByH,YAAY,gBACJC,UAAyBnI,GAAOoI,MAD7B,GAEHD,UAAyBnI,GAAOqI,aAF7B,CAGPpI,SAAU,SACVE,QAAS,cACTmI,OAAO,aAAD,OAAetI,EAAM0H,QAAQa,WAAWC,OAC9CC,QAAS,UAEbC,UAAW,CACPC,SAAU,SACVnL,SAAU,OACVoL,aAAc,YAGlBC,SAAU,CACNC,OAAQ9I,EAAM8I,OAAOC,OAAS,EAC9BnH,MAAO,YAIToH,IAAqC,qBACtCC,WAASC,GAAK,MADwB,eAEtCD,WAAS1M,IAAM,OAFuB,eAGtC0M,WAAStM,IAAM,OAHuB,IAM9BwM,GAAO,SAACnM,GACjB,IAAIrB,EAAW0B,cACXxC,EAAOjC,GAAwB,SAAA/E,GAAK,OAAIA,EAAM2H,KAAKX,QACnDC,EAAalC,GAAwB,SAAA/E,GAAK,OAAIA,EAAM2H,KAAKV,cAH9B,EAKCgC,IAAM2B,SAAmB,IAL1B,oBAKxB2K,EALwB,KAKdC,EALc,KAMzBC,EAAgBF,EAAS5D,OAE/B+D,qBAAU,WACN5N,EAAS/G,QACV,CAAC+G,IAEJ4N,qBAAU,WACNF,EAAY,MACb,CAACxO,IAd2B,MAgBSiC,IAAM2B,SAAiB,IAhBhC,oBAgB1B+K,EAhB0B,KAgBXC,EAhBW,KAiBzBC,EAASC,uBACX,SAACC,EAAuBC,GACpBJ,EAAiBG,GACjBjO,EAASiJ,EAAqB9M,YAAW,MAE7C,CAAC6D,IAtB0B,EAwB6BmO,aAAY,CAAEJ,SAAQK,OAAO,UAAYC,SAAS,IAAtGC,EAxBuB,EAwBvBA,aAAcC,EAxBS,EAwBTA,cAAeC,EAxBN,EAwBMA,aAAc5M,EAxBpB,EAwBoBA,KAE7C2D,EAAUpB,KAEZsK,EAAgG,GACpG,GAAa,OAATvP,EAAe,CAAC,IAAD,uBACf,YAAkBA,EAAKwP,OAAvB,+CAA+B,CAAC,IAAvBC,EAAsB,+BAC3B,YAAkBA,EAAMF,OAAxB,+CAAgC,CAAC,IAAD,IAAvBG,EAAuB,QAC5BH,EAAOrL,KAAK,CACR/J,MAAOuV,EAAMvV,MACbc,MAAK,UAAEyU,EAAMzU,aAAR,wBACLwU,MAAK,UAAEA,EAAMxU,aAAR,WACL0U,SAAUxB,GAAauB,EAAMC,UAC7BC,SAAUC,+BAAqBH,EAAME,UAAU,MAP5B,oFADhB,mFAenB,IAgBME,EAA0B,SAACnL,EAAyB+G,GAAkB,IAAD,IACnEqE,EAAgBrE,EAChBsE,EAAW,oBAAGC,oBAAUjQ,GAAOkQ,MAAK,SAAAR,GAAK,OAAIA,EAAMvV,QAAU4V,YAAlD,aAAG,EAA+D9U,aAAlE,QAA2E,GAE1F6F,EACIK,uBAAa,CACTiD,EAAoBnH,YAAW,GAC/BmH,EAAoBzG,eAAeqS,GACnC5L,EAAoBxG,SAASmS,OAazC,OACI,kBAAC,IAAMzL,SAAP,KACI,kBAACmC,GAAA,EAAD,CAAKC,UAAWL,EAAQF,SACpB,kBAACQ,GAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,MAC9B5G,GAAU,cAEf,kBAAC,GAAD,OAEJ,kBAAC0G,GAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,SACrB,OAAT7G,EAAA,UACQ6P,+BAAqB7P,EAAKmQ,MAAM,GADxC,oBAC0DN,+BAAqB7P,EAAKxE,OAAO,IAD3F,cAIL,kBAAC4U,GAAA,EAAD,CACI1J,UAAW2J,mBAAKhK,EAAQmG,QAAT,eACVnG,EAAQuG,iBAAmB6B,EAAgB,KAG/CA,EAAgB,EACb,kBAAC6B,GAAA,EAAD,CACIC,cAAe9B,EAAgB,GAAKA,EAAgBc,EAAO5E,OAC3D6F,QAAS/B,EAAgB,EACzB7F,SAnDS,SAACjE,GACtB4J,EAAS5D,OAAS4E,EAAO5E,OACzB6D,EAAYe,EAAOkB,KAAI,SAAAC,GAAC,OAAIA,EAAEvW,UAE9BqU,EAAY,KAgDAmC,WAAY,CAAE,aAAc,uBAEhC,KACHlC,EAAgB,EACb,kBAAC9H,GAAA,EAAD,CAAYD,UAAWL,EAAQsG,aAAc5F,MAAM,UAAUF,QAAQ,aAChE4H,EADL,aAIA,kBAAC9H,GAAA,EAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKH,UAAWL,EAAQsG,eAClD,OAAJ3M,QAAI,IAAJA,OAAA,EAAAA,EAAM/E,QAAN,iBAIRwT,EAAgB,EACb,kBAACmC,GAAA,EAAD,CAAS3V,MAAM,UACX,kBAACsJ,GAAA,EAAD,CAAYC,aAAW,SAASf,QA1CvB,SAACkB,GTpH3B,IAAsBkM,ESqHrB/P,GTrHqB+P,ESqHCtC,ETpH1B,uCAAO,WAAezN,GAAf,2BAAAC,EAAA,sDACKG,EAAiBD,EAAjBC,aACRJ,EAASE,EAAgBzB,YAAW,KACpCsR,EAAUA,EAAQC,QACVC,UAJL,8BAKeF,EALf,yEAKM1W,EALN,kBAMO+G,EAAc8P,YAAY7W,GANjC,6QAQHJ,KAAc+G,GARX,4EAAP,mDAAM,OS8JkB,kBAAC,KAAD,QAGR,KAEH2N,EAAgB,EACb,kBAACmC,GAAA,EAAD,CAAS3V,MAAM,UACX,kBAACsJ,GAAA,EAAD,CAAYC,aAAW,SAASyM,SAA4B,IAAlBxC,EAAqBhL,QAtDnD,SAACkB,GAC7BmL,EAAwBnL,EAAO4J,EAAS,MAsDpB,kBAAC,KAAD,QAGR,MAER,kBAAC9H,GAAA,EAAD,eAAKC,UAAWL,EAAQ1F,MAAUyO,KAC9B,0BAAWC,KACX,kBAAC6B,GAAA,EAAD,CAAOC,KAAK,SACR,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,cACA,kBAACA,GAAA,EAAD,eACA,kBAACA,GAAA,EAAD,CAAWxK,MAAM,SAAjB,cAGR,kBAACyK,GAAA,EAAD,KACKhC,EAAOkB,KAAI,SAAAf,GAAK,OACb,kBAAC2B,GAAA,EAAD,CACIG,OAAK,EACLjD,SAAUA,EAASkD,SAAS/B,EAAMvV,OAClCyE,IAAK8Q,EAAMvV,MACXuX,cAAe,SAAA/M,GAAK,OAAImL,EAAwBnL,EAAO+K,EAAMvV,QAC7DsJ,QAAS,SAAAkB,GAAK,OA1GU+G,EA0GmBgE,EAAMvV,WAzGrEoU,EAASkD,SAAS/F,GAClB8C,EAAYD,EAASoD,QAAO,SAAA5G,GAAC,OAAIA,IAAMW,MAEvC8C,EAAY,GAAD,mBAAKD,GAAL,CAAe7C,MAJR,IAA0BA,IA4GxB,kBAAC4F,GAAA,EAAD,CAAW5K,UAAWL,EAAQwH,UAAW5S,MAAOyU,EAAMzU,OACjDyU,EAAMzU,OAAN,YAEL,kBAACqW,GAAA,EAAD,KACI,0BAAM5K,UAAWL,EAAQgH,aAAcqC,EAAMC,WAEjD,kBAAC2B,GAAA,EAAD,CAAWxK,MAAM,SAAS4I,EAAME,gBAKhD,kBAACgC,EAAA,EAAD,CAAUlL,UAAWL,EAAQ2H,SAAUtL,KAAM4M,GAA7C,8BAIJ,kBAACuC,GAAA,EAAD,CAAK9K,MAAM,UAAUvC,aAAW,MAAMkC,UAAWL,EAAQ2F,IAAKvI,QAASf,GACnE,kBAAC,KAAD,OAGJ,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAe4H,MAAOqE,IACtB,kBAAC,GAAD,Q,+BC1QN1J,GAAYC,cAAW,SAAAC,GAAK,MAAK,CACnC2M,OAAO,aACH/L,MAAO,OACPC,OAAQ,QACPb,EAAMsH,YAAYC,GAAG,IAAyB,EAAnBvH,EAAMS,QAAQ,IAAU,CAChDG,MAAO,IACPsG,WAAY,OACZC,YAAa,SAIrBqB,MAAM,aACFvI,SAAU,WACVE,QAAS,OACTE,cAAe,SACfoI,QAASzI,EAAMS,QAAQ,GACvBI,OAAQ,QACPb,EAAMsH,YAAYC,GAAG,IAAyB,EAAnBvH,EAAMS,QAAQ,IAAU,CAChDD,UAAWR,EAAMS,QAAQ,GACzBwG,aAAcjH,EAAMS,QAAQ,GAC5BgI,QAASzI,EAAMS,QAAQ,GACvBI,OAAQ,MAGhB+L,UAAW,CACPzM,QAAS,OACTG,WAAY,UAEhBuI,SAAU,CACNC,OAAQ9I,EAAM8I,OAAOC,OAAS,EAC9BnH,MAAO,QAEXiL,aAAc,CACVjM,MAAO,QAITkM,GAAYC,aAAe,CAC7BrF,QAAS,CACLnE,KAAM,OACNyE,QAAS,CACLF,MAAO,UACPtM,KAAM,UACNyM,KAAM,UACN+E,aAAc,WAKpBC,GAAaF,aAAe,CAC9BrF,QAAS,CACLnE,KAAM,WAwDC2J,GApDH,WACR,IAAMhM,EAAUpB,KAEVnE,EAAW0B,cAHH,EAIwBzE,GAAwB,SAAA/E,GAAK,OAAIA,EAAM0H,YAAvEpC,EAJQ,EAIRA,SAAUC,EAJF,EAIEA,QAASI,EAJX,EAIWA,SAEzB,OACI,kBAAC,IAAM2F,SAAP,KACI,kBAACgO,GAAA,EAAD,CAAenN,MAAOxG,EAAWsT,GAAYG,IACzC,kBAACG,EAAA,EAAD,MAEA,0BAAM7L,UAAWL,EAAQyL,QACrB,kBAACU,GAAA,EAAD,CAAO9L,UAAWL,EAAQsH,OACR,YAAbrP,EAAyB,kBAAC,GAAD,MAAc,KAC1B,SAAbA,EAAsB,kBAAC,GAAD,MAAW,KAElC,kBAACmI,GAAA,EAAD,CAAKC,UAAWL,EAAQ0L,WACpB,kBAACxN,GAAA,EAAD,CAAYd,QAAS,kBAAM3C,EAAS4C,EAAW/D,aAAahB,MACxD,kBAAC,KAAD,CAAiBoI,MAAOpI,EAAW,iBAAc8T,KAErD,kBAAC9L,GAAA,EAAD,CAAYE,QAAQ,QAAQE,MAAM,gBAAgBQ,MAAO,CAAE+E,YAAY,QAClE,QACD,kBAACnJ,GAAA,EAAD,CAAMC,IAAI,sBAAsB2D,MAAM,UAAUzD,OAAO,SAASD,KAAK,8BAArE,kBAEQ,KACP,IAAIqP,MAAOC,cACX,KAEL,kBAACxP,GAAA,EAAD,CACIC,IAAI,sBACJC,KAAK,gDACLqD,UAAU,uBACVkM,WAAS,eACTC,gBAAc,WACdC,WAAS,OACTC,kBAAgB,SAPpB,SAWA,kBAACtM,GAAA,EAAD,CAAKc,MAAO,CAAElC,KAAM,iBAKhC,kBAACuM,EAAA,EAAD,CAAUlL,UAAWL,EAAQ2H,SAAUtL,KAAMnE,GACzC,kBAACyU,GAAA,EAAD,CAAkBjM,MAAM,gB,2BTrH/BkM,GAAb,WAGI,WAAmBC,GAAiB,yBAAjBA,SAAgB,KAF3BC,qBAE2B,EAC/BD,EAAOE,UAAYvZ,KAAKwZ,cAAcC,KAAKzZ,MAJnD,wLAQc,IAAIqR,SAAsB,SAAAC,GAC5B,EAAKgI,gBAAkBhI,EACvB,EAAK+H,OAAOK,YAAY,CAAErW,OAAQ,YAV9C,uKAciBhC,EAAmBsY,GAdpC,8FAe8B,IAAItI,SAAsB,SAAAC,GAC5C,EAAKgI,gBAAkBhI,EACvB,EAAK+H,OAAOK,YAAY,CAAErW,OAAQ,SAAUsW,UAAStY,QAAQ,CAACA,OAjB1E,cAeYuY,EAfZ,yBAmBeA,EAAUvY,KAAKwY,QAnB9B,wIAsBkBvJ,GACVtQ,KAAKsZ,gBAAiBhJ,GACtBtQ,KAAKsZ,qBAAkBV,MAxB/B,KA4BiC,qBAAtBkB,mBAAqCC,gBAAgBD,oBAG5DP,UAAS,uCAAG,WAAOjJ,GAAP,mCAAApJ,EAAA,wDACsBoJ,EAAGjP,KAAzBgC,EADA,EACAA,OAAW2W,EADX,2BAEO,SAAX3W,GACA0W,KAAKE,cAAc3V,EAAiB,iBACnCyV,KAAa7R,SAASvJ,MAAK,SAACub,GACzBhS,GAASgS,EACTH,KAAKL,YAAY,CAAErW,OAAQ,SAC3B6E,GAAOiS,WAAajS,GAAOiS,WAAU,SAACC,EAAaC,GAAd,OAAiCpb,QAAQC,IAAR,UAAemb,EAAf,aAA0BD,WAElF,WAAX/W,IACCsW,EAAkBK,EAAlBL,QAAStY,EAAS2Y,EAAT3Y,KADW,iCAItBiZ,EAAY,IAAIC,WAAWlZ,GACjC6G,GAAOsS,GAAGC,UAAV,UAL4B,iBAKQH,GACpCpS,GAAOwS,SAAS,CAAC,KAAD,cANY,gBAMZ,KANY,iBAMZ,YAAiEf,IAG7EgB,EAAWzS,GAAOsS,GAAGI,KATG,kBAUxBtD,EAAOqD,EAASrD,KAChBuD,EAAM,IAAIN,WAAWjD,EAAO,IAC5BwD,EAAmB5S,GAAOsS,GAAG3R,KAZL,iBAYsB,KAClDX,GAAOsS,GAAGO,KAAKD,EAAkBD,EAAK,EAAGA,EAAI/J,OAAQ,IACrD5I,GAAOsS,GAAGQ,MAAMF,GAEZjB,EAASgB,EAAII,OAEjBlB,KAAKL,YACD,CACIrW,OAAQ,SACRwW,UAEJ,CAACA,IAELE,KAAKiB,SAlCD,2CAAH,uDU9Bb,IAAME,GAAkBxb,EAAQ,KAcnByb,GAAb,iDACWC,mBADX,OAEWC,sBAFX,OAGWC,SAAkD,GAH7D,KAIWC,WAJX,QAKWC,iBALX,gKAQQC,uBAAW,GARnB,wKAWkB/J,GAXlB,qFAYQ1R,KAAKsb,SAAW,GAChBtb,KAAKob,cAAgBM,wBAAa,CAC9BC,OAAQ,SAACrY,GACL,EAAKgY,SAASjR,KAAK/G,GACnBrE,QAAQC,IAAIoE,EAAQD,OAAQC,EAAQkK,UAExCoO,SAAUtX,EAAiB,kBAC3BuX,WAAYvX,EAAiB,mBAnBzC,SAqBctE,KAAKob,cAAcU,OArBjC,cAuBQ9b,KAAKqb,iBAAmB,IAAIjC,GAAiB,IAAI8B,IAvBzD,SAwBclb,KAAKqb,iBAAiBhO,OAxBpC,UA2B2B,KADf0O,EAAMrK,EAAKlP,KAAKwZ,MAAM,KAAK1Z,OAAO,IAC9BwO,OA3BhB,uBA4BkB,IAAImL,MAAJ,oCAAuCvK,EAAKlP,OA5B9D,eA+BQxC,KAAKub,WAAL,sBAAiCQ,EAAI,IACrC/b,KAAKwb,iBAAL,eAhCR,UAkCcxb,KAAKob,cAAcc,MAAMlc,KAAKub,WAAY7J,GAlCxD,yRAsCc1R,KAAKob,cAAce,UAAUnc,KAAKub,WAAlC,UAAiDvb,KAAKwb,iBAAtD,8BAtCd,OAwCYY,EAAmB,iBACnBC,EAAmB,oBACnB/a,EAAwB,KACxBiP,EAAuB,KA3CnC,8BA6CyBvQ,KAAKsb,SA7C9B,sEA6CiBgB,EA7CjB,QA+C0B,QADVle,EAAQke,EAAK9O,QAAQpP,MAAMge,IA9C3C,wBAgDgB9a,EAASlD,EAAM,GAhD/B,mCAoD0B,QADdA,EAAQke,EAAK9O,QAAQpP,MAAMie,IAnDvC,wBAqDgB9L,EAAQnS,EAAM,GArD9B,mCAwD2B,OAAXkD,GAA6B,OAAViP,EAxDnC,oVA6De,CAAEjP,SAAQiP,UA7DzB,qSAiEkB,QADCjP,EAhEnB,EAgEmBA,QAhEnB,wBAkEkBib,EAlElB,UAkEmCvc,KAAKwb,iBAlExC,iBAmEkBxb,KAAKob,cAAce,UAAUnc,KAAKub,WAAYgB,EAAa,sBAnE7E,uBAoEiCvc,KAAKob,cAAcL,KAAKwB,GApEzD,uBAoEkBlb,EApElB,EAoEkBA,KApElB,kBAqEmBA,EAAK4Z,QArExB,eAuEkBsB,EAvElB,UAuEmCvc,KAAKwb,iBAvExC,kBAwEkBxb,KAAKob,cAAce,UAAUnc,KAAKub,WAAYgB,EAAa,oBAxE7E,yBAyEiCvc,KAAKob,cAAcL,KAAKwB,GAzEzD,iBAyEkBlb,EAzElB,EAyEkBA,KACFsY,EA1EhB,SA2EoBrY,EA3EpB,iFA6EoBqY,EAAO,MA7E3B,oCAgFoBA,EAAO,MAhF3B,oCAmFoBA,EAAO,KAnF3B,8CAsF+B3Z,KAAKqb,iBAAkBmB,OAAOnb,EAAK4Z,OAAQtB,GAtF1E,eAsFgBE,EAtFhB,yBAuFmBA,GAvFnB,+GCDAzS,EAAgBC,aAAe,IAAI1H,EACnCyH,EAAgBgG,mBAAqB,IAAI+N,GAGrCld,OAAOwe,iBAAiB,gBAAgB,SAAAnM,GAClB/J,EAAM4G,WAAWzG,aAAahE,UAIhD4N,EAAGzC,iBACHyC,EAAGoM,YAAH,6CAGAle,WAAaA,UAAUsB,IACvBtB,UAAUsB,IAAI6c,aAAe,WACzBpW,EAAMU,SAAS4C,EAAWpE,SAAS,aAGvCc,EAAMU,SAAS4C,EAAWhE,qBAAoB,IAKlD5H,OAAOwe,iBAAiB,uBAAuB,SAACnX,GAC5CA,EAAEuI,oBAKV+O,IAASC,OACL,kBAAC,IAAD,CAAUtW,MAAOA,GACb,kBAAC,GAAD,OAEJuW,SAASC,eAAe,SvBxBrB,SAAkBxe,GACrB,GAA6C,kBAAmBC,UAAW,CAGvE,GADkB,IAAIwe,IAAIxY,eAAwBvG,OAAOC,SAASsL,MACpDyT,SAAWhf,OAAOC,SAAS+e,OAIrC,OAGJhf,OAAOwe,iBAAiB,QAAQ,WAC5B,IAAMne,EAAK,UAAMkG,eAAN,4BAEPzG,IAiEhB,SAAiCO,EAAeC,GAE5C2e,MAAM5e,EAAO,CACT6e,QAAS,CAAE,iBAAkB,YAE5Bxe,MAAK,SAAAye,GAEF,IAAMC,EAAcD,EAASD,QAAQG,IAAI,gBACjB,MAApBF,EAASG,QAAkC,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAEvEhf,UAAUC,cAAcgf,MAAM9e,MAAK,SAAAC,GAC/BA,EAAa8e,aAAa/e,MAAK,WAC3BV,OAAOC,SAASyf,eAKxBtf,EAAgBC,EAAOC,MAG9BiB,OAAM,WACHP,QAAQC,IAAI,oEApFR0e,CAAwBtf,EAAOC,GAI/BC,UAAUC,cAAcgf,MAAM9e,MAAK,WAC/BM,QAAQC,IACJ,iHAKRb,EAAgBC,EAAOC,OuBCvCE,K","file":"static/js/main.7fbfcd41.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/chrome-icon.f3b6c54c.svg\";","module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"cc43d050d6e858b79f86.worker.js\");\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void;\n    onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/final-service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' + 'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    console.log('state change', installingWorker.state);\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n            registration.update(); // Check for new version everytime we load the page\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import { openNewDevice, NetMDInterface, Disc, listContent, openPairedDevice, Wireformat, MDTrack, download } from 'netmd-js';\nimport { makeGetAsyncPacketIteratorOnWorkerThread } from 'netmd-js/dist/web-encrypt-worker';\n\nconst Worker = require('worker-loader!netmd-js/dist/web-encrypt-worker.js'); // eslint-disable-line import/no-webpack-loader-syntax\n\nexport interface NetMDService {\n    pair(): Promise<boolean>;\n    connect(): Promise<boolean>;\n    listContent(): Promise<Disc>;\n    getDeviceName(): Promise<string>;\n    finalize(): Promise<void>;\n    renameTrack(index: number, newTitle: string): Promise<void>;\n    renameDisc(newName: string): Promise<void>;\n    deleteTrack(index: number): Promise<void>;\n    wipeDisc(): Promise<void>;\n    upload(\n        title: string,\n        data: ArrayBuffer,\n        format: Wireformat,\n        progressCallback: (progress: { written: number; encrypted: number; total: number }) => void\n    ): Promise<void>;\n}\n\nexport class NetMDUSBService implements NetMDService {\n    private netmdInterface?: NetMDInterface;\n\n    async pair() {\n        let iface = await openNewDevice(navigator.usb);\n        if (iface === null) {\n            return false;\n        }\n        this.netmdInterface = iface;\n        return true;\n    }\n\n    async connect() {\n        let iface = await openPairedDevice(navigator.usb);\n        if (iface === null) {\n            return false;\n        }\n        this.netmdInterface = iface;\n        return true;\n    }\n\n    async listContent() {\n        return await listContent(this.netmdInterface!);\n    }\n\n    async getDeviceName() {\n        return await this.netmdInterface!.netMd.getDeviceName();\n    }\n\n    async finalize() {\n        await this.netmdInterface!.netMd.finalize();\n    }\n\n    async renameTrack(index: number, newTitle: string) {\n        await this.netmdInterface!.setTrackTitle(index, newTitle);\n    }\n\n    async renameDisc(newName: string) {\n        const oldName = await this.netmdInterface!.getDiscTitle();\n        let newNameWithGroups = await this.netmdInterface!._getDiscTitle();\n        newNameWithGroups = newNameWithGroups.replace(oldName, newName);\n        await this.netmdInterface!.cacheTOC();\n        await this.netmdInterface!.setDiscTitle(newNameWithGroups);\n        await this.netmdInterface!.syncTOC();\n    }\n\n    async deleteTrack(index: number) {\n        await this.netmdInterface!.eraseTrack(index);\n    }\n\n    async wipeDisc() {\n        await this.netmdInterface!.eraseDisc();\n    }\n\n    async upload(\n        title: string,\n        data: ArrayBuffer,\n        format: Wireformat,\n        progressCallback: (progress: { written: number; encrypted: number; total: number }) => void\n    ) {\n        let total = data.byteLength;\n        let written = 0;\n        let encrypted = 0;\n        function updateProgress() {\n            progressCallback({ written, encrypted, total });\n        }\n\n        let w = new Worker();\n\n        let webWorkerAsyncPacketIterator = makeGetAsyncPacketIteratorOnWorkerThread(w, ({ encryptedBytes }) => {\n            encrypted = encryptedBytes;\n            updateProgress();\n        });\n\n        let mdTrack = new MDTrack(title, format, data, 0x80000, webWorkerAsyncPacketIterator);\n\n        await download(this.netmdInterface!, mdTrack, ({ writtenBytes }) => {\n            written = writtenBytes;\n            updateProgress();\n        });\n    }\n}\n","import { NetMDService } from './netmd';\nimport { AudioExportService } from './audio-export';\n\ninterface ServiceRegistry {\n    netmdService?: NetMDService;\n    audioExportService?: AudioExportService;\n}\n\nconst ServiceRegistry: ServiceRegistry = {};\n\nexport default ServiceRegistry;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface LoadingDialogState {\n    visible: boolean;\n    writtenProgress: number;\n    encryptedProgress: number;\n    totalProgress: number;\n\n    trackTotal: number;\n    trackConverting: number;\n    trackCurrent: number;\n\n    titleCurrent: string;\n    titleConverting: string;\n}\n\nconst initialState: LoadingDialogState = {\n    visible: false,\n    // Current Track Upload\n    writtenProgress: 0,\n    encryptedProgress: 0,\n    totalProgress: 1,\n\n    // Tracks done\n    trackTotal: 1,\n    trackConverting: 0,\n    trackCurrent: 0,\n    titleCurrent: '',\n    titleConverting: '',\n};\n\nexport const slice = createSlice({\n    name: 'uploadDialog',\n    initialState,\n    reducers: {\n        setVisible: (state, action: PayloadAction<boolean>) => {\n            state.visible = action.payload;\n        },\n        setWriteProgress: (state, action: PayloadAction<{ written: number; encrypted: number; total: number }>) => {\n            state.encryptedProgress = action.payload.encrypted;\n            state.writtenProgress = action.payload.written;\n            state.totalProgress = action.payload.total;\n        },\n        setTrackProgress: (\n            state,\n            action: PayloadAction<{ total: number; current: number; converting: number; titleCurrent: string; titleConverting: string }>\n        ) => {\n            state.trackTotal = action.payload.total;\n            state.trackCurrent = action.payload.current;\n            state.trackConverting = action.payload.converting;\n            state.titleCurrent = action.payload.titleCurrent;\n            state.titleConverting = action.payload.titleConverting;\n        },\n    },\n});\n\nexport const { reducer, actions } = slice;\nexport default enableBatching(reducer);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface RenameDialogState {\n    visible: boolean;\n    title: string;\n    index: number;\n}\n\nconst initialState: RenameDialogState = {\n    visible: false,\n    title: '',\n    index: -1,\n};\n\nexport const slice = createSlice({\n    name: 'renameDialog',\n    initialState,\n    reducers: {\n        setVisible: (state: RenameDialogState, action: PayloadAction<boolean>) => {\n            state.visible = action.payload;\n        },\n        setCurrentName: (state: RenameDialogState, action: PayloadAction<string>) => {\n            state.title = action.payload;\n        },\n        setIndex: (state: RenameDialogState, action: PayloadAction<number>) => {\n            state.index = action.payload;\n        },\n    },\n});\n\nexport const { reducer, actions } = slice;\nexport default enableBatching(reducer);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface ErrorDialogState {\n    visible: boolean;\n    error: string;\n}\n\nconst initialState: ErrorDialogState = {\n    visible: false,\n    error: ``,\n};\n\nconst slice = createSlice({\n    name: 'errorDialog',\n    initialState,\n    reducers: {\n        setVisible: (state, action: PayloadAction<boolean>) => {\n            state.visible = action.payload;\n        },\n        setErrorMessage: (state, action: PayloadAction<string>) => {\n            state.error = `${action.payload}`;\n        },\n    },\n});\n\nexport const { actions, reducer } = slice;\nexport default enableBatching(reducer);\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface ConvertDialogFeature {\n    visible: boolean;\n    format: string;\n}\n\nconst initialState: ConvertDialogFeature = {\n    visible: false,\n    format: `LP2`,\n};\n\nconst slice = createSlice({\n    name: 'convertDialog',\n    initialState,\n    reducers: {\n        setVisible: (state, action: PayloadAction<boolean>) => {\n            state.visible = action.payload;\n        },\n        setFormat: (state, action: PayloadAction<string>) => {\n            state.format = action.payload;\n        },\n    },\n});\n\nexport const { actions, reducer } = slice;\nexport default enableBatching(reducer);\n","import { useSelector, shallowEqual } from 'react-redux';\nimport { RootState } from './redux/store';\n\nexport function sleep(ms: number) {\n    return new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n}\n\nexport function useShallowEqualSelector<TState = RootState, TSelected = unknown>(selector: (state: TState) => TSelected): TSelected {\n    return useSelector(selector, shallowEqual);\n}\n\nexport function hasWebUSB(): boolean {\n    return !!navigator.usb;\n}\n\nexport function getWebUSB(): USB {\n    return navigator.usb;\n}\n\nexport function debugEnabled() {\n    return process.env.NODE_ENV === 'development';\n}\n\nexport function getPublicPathFor(script: string) {\n    return `${process.env.PUBLIC_URL}/${script}`;\n}\n\nexport function savePreference(key: string, value: unknown) {\n    localStorage.setItem(key, JSON.stringify(value));\n}\n\nexport function loadPreference<T>(key: string, defaultValue: T): T {\n    let res = localStorage.getItem(key);\n    if (res === null) {\n        return defaultValue;\n    } else {\n        try {\n            return JSON.parse(res) as T;\n        } catch (e) {\n            return defaultValue;\n        }\n    }\n}\n\ndeclare let process: any;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\nimport { savePreference, loadPreference } from '../utils';\n\ntype Views = 'WELCOME' | 'MAIN';\n\nexport interface AppState {\n    mainView: Views;\n    loading: boolean;\n    pairingFailed: boolean;\n    pairingMessage: string;\n    browserSupported: boolean;\n    darkMode: boolean;\n    aboutDialogVisible: boolean;\n}\n\nconst initialState: AppState = {\n    mainView: 'WELCOME',\n    loading: false,\n    pairingFailed: false,\n    pairingMessage: ``,\n    browserSupported: true,\n    darkMode: loadPreference('darkMode', false),\n    aboutDialogVisible: false,\n};\n\nexport const slice = createSlice({\n    name: 'app',\n    initialState,\n    reducers: {\n        setState: (state, action: PayloadAction<Views>) => {\n            state.mainView = action.payload;\n        },\n        setLoading: (state, action: PayloadAction<boolean>) => {\n            state.loading = action.payload;\n        },\n        setPairingFailed: (state, action: PayloadAction<boolean>) => {\n            state.pairingFailed = action.payload;\n        },\n        setPairingMessage: (state, action: PayloadAction<string>) => {\n            state.pairingMessage = action.payload;\n        },\n        setBrowserSupported: (state, action: PayloadAction<boolean>) => {\n            state.browserSupported = action.payload;\n        },\n        setDarkMode: (state, action: PayloadAction<boolean>) => {\n            state.darkMode = action.payload;\n            savePreference('darkMode', state.darkMode);\n        },\n        showAboutDialog: (state, action: PayloadAction<boolean>) => {\n            state.aboutDialogVisible = action.payload;\n        },\n    },\n});\n\nexport const { reducer, actions } = slice;\nexport default enableBatching(reducer);\n","import { Disc } from 'netmd-js';\nimport { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { enableBatching } from 'redux-batched-actions';\n\nexport interface MainState {\n    disc: Disc | null;\n    deviceName: string;\n}\n\nconst initialState: MainState = {\n    disc: null,\n    deviceName: '',\n};\n\nexport const slice = createSlice({\n    name: 'main',\n    initialState,\n    reducers: {\n        setDisc: (state, action: PayloadAction<Disc>) => {\n            state.disc = action.payload;\n        },\n        setDeviceName: (state, action: PayloadAction<string>) => {\n            state.deviceName = action.payload;\n        },\n    },\n});\n\nexport const { reducer, actions } = slice;\nexport default enableBatching(reducer);\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport uploadDialog from './upload-dialog-feature';\nimport renameDialog from './rename-dialog-feature';\nimport errorDialog from './error-dialog-feature';\nimport convertDialog from './convert-dialog-feature';\nimport appState from './app-feature';\nimport main from './main-feature';\n\nexport const store = configureStore({\n    reducer: {\n        renameDialog,\n        uploadDialog,\n        errorDialog,\n        convertDialog,\n        appState,\n        main,\n    },\n    middleware: [...getDefaultMiddleware()],\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import { batchActions } from 'redux-batched-actions';\nimport { AppDispatch, RootState } from './store';\nimport { actions as uploadDialogActions } from './upload-dialog-feature';\nimport { actions as renameDialogActions } from './rename-dialog-feature';\nimport { actions as errorDialogAction } from './error-dialog-feature';\nimport { actions as appStateActions } from './app-feature';\nimport { actions as mainActions } from './main-feature';\nimport serviceRegistry from '../services/registry';\nimport { Wireformat } from 'netmd-js';\nimport { AnyAction } from '@reduxjs/toolkit';\n\nexport function pair() {\n    return async function(dispatch: AppDispatch, getState: () => RootState) {\n        dispatch(appStateActions.setPairingFailed(false));\n\n        await serviceRegistry.audioExportService!.init();\n\n        try {\n            let connected = await serviceRegistry.netmdService!.connect();\n            if (connected) {\n                dispatch(appStateActions.setState('MAIN'));\n                return;\n            }\n        } catch (err) {\n            console.error(err);\n            // In case of error, just log and try to pair\n        }\n\n        try {\n            let paired = await serviceRegistry.netmdService!.pair();\n            if (paired) {\n                dispatch(appStateActions.setState('MAIN'));\n                return;\n            }\n            dispatch(batchActions([appStateActions.setPairingMessage(`Connection Failed`), appStateActions.setPairingFailed(true)]));\n        } catch (err) {\n            console.error(err);\n            let message = (err as Error).message;\n            dispatch(batchActions([appStateActions.setPairingMessage(message), appStateActions.setPairingFailed(true)]));\n        }\n    };\n}\n\nexport function listContent() {\n    return async function(dispatch: AppDispatch) {\n        // Issue loading\n        dispatch(appStateActions.setLoading(true));\n        let disc = await serviceRegistry.netmdService!.listContent();\n        let deviceName = await serviceRegistry.netmdService!.getDeviceName();\n        dispatch(batchActions([mainActions.setDisc(disc), mainActions.setDeviceName(deviceName), appStateActions.setLoading(false)]));\n    };\n}\n\nexport function renameTrack({ index, newName }: { index: number; newName: string }) {\n    return async function(dispatch: AppDispatch) {\n        const { netmdService } = serviceRegistry;\n        await netmdService!.renameTrack(index, newName);\n        dispatch(renameDialogActions.setVisible(false));\n        listContent()(dispatch);\n    };\n}\n\nexport function renameDisc({ newName }: { newName: string }) {\n    return async function(dispatch: AppDispatch) {\n        const { netmdService } = serviceRegistry;\n        await netmdService!.renameDisc(newName);\n        dispatch(renameDialogActions.setVisible(false));\n        listContent()(dispatch);\n    };\n}\n\nexport function deleteTracks(indexes: number[]) {\n    return async function(dispatch: AppDispatch) {\n        const { netmdService } = serviceRegistry;\n        dispatch(appStateActions.setLoading(true));\n        indexes = indexes.sort();\n        indexes.reverse();\n        for (let index of indexes) {\n            await netmdService!.deleteTrack(index);\n        }\n        listContent()(dispatch);\n    };\n}\n\nexport function wipeDisc() {\n    return async function(dispatch: AppDispatch) {\n        const { netmdService } = serviceRegistry;\n        dispatch(appStateActions.setLoading(true));\n        await netmdService!.wipeDisc();\n        listContent()(dispatch);\n    };\n}\n\nexport const WireformatDict: { [k: string]: Wireformat } = {\n    SP: Wireformat.pcm,\n    LP2: Wireformat.lp2,\n    LP105: Wireformat.l105kbps,\n    LP4: Wireformat.lp4,\n};\n\nexport function convertAndUpload(files: File[], format: string) {\n    return async function(dispatch: AppDispatch, getState: (state: RootState) => void) {\n        const { audioExportService, netmdService } = serviceRegistry;\n        const wireformat = WireformatDict[format];\n\n        dispatch(uploadDialogActions.setVisible(true));\n\n        const updateProgressCallback = ({ written, encrypted, total }: { written: number; encrypted: number; total: number }) => {\n            dispatch(uploadDialogActions.setWriteProgress({ written, encrypted, total }));\n        };\n\n        let trackUpdate: {\n            current: number;\n            converting: number;\n            total: number;\n            titleCurrent: string;\n            titleConverting: string;\n        } = {\n            current: 0,\n            converting: 0,\n            total: files.length,\n            titleCurrent: '',\n            titleConverting: '',\n        };\n        const updateTrack = () => {\n            dispatch(uploadDialogActions.setTrackProgress(trackUpdate));\n        };\n\n        let conversionIterator = async function*(files: File[]) {\n            let converted: Promise<{ file: File; data: ArrayBuffer }>[] = [];\n\n            let i = 0;\n            function convertNext() {\n                if (i === files.length) {\n                    trackUpdate.converting = i;\n                    trackUpdate.titleConverting = ``;\n                    updateTrack();\n                    return;\n                }\n\n                let f = files[i];\n                trackUpdate.converting = i;\n                trackUpdate.titleConverting = f.name;\n                updateTrack();\n                i++;\n\n                converted.push(\n                    new Promise(async (resolve, reject) => {\n                        let data: ArrayBuffer;\n                        try {\n                            await audioExportService!.prepare(f);\n                            data = await audioExportService!.export({ format });\n                            convertNext();\n                            resolve({ file: f, data: data });\n                        } catch (err) {\n                            error = err;\n                            errorMessage = `${f.name}: Unsupported or unrecognized format`;\n                            reject(err);\n                        }\n                    })\n                );\n            }\n            convertNext();\n\n            let j = 0;\n            while (j < converted.length) {\n                yield await converted[j];\n                delete converted[j];\n                j++;\n            }\n        };\n\n        let error: any;\n        let errorMessage = ``;\n        let i = 1;\n        for await (let item of conversionIterator(files)) {\n            const { file, data } = item;\n\n            trackUpdate.current = i++;\n            trackUpdate.titleCurrent = file.name;\n            updateTrack();\n            updateProgressCallback({ written: 0, encrypted: 0, total: 100 });\n            try {\n                await netmdService?.upload(file.name, data, wireformat, updateProgressCallback);\n            } catch (err) {\n                error = err;\n                errorMessage = `${file.name}: Error uploading to device`;\n                break;\n            }\n        }\n\n        let actionToDispatch: AnyAction[] = [uploadDialogActions.setVisible(false)];\n\n        if (error) {\n            console.error(error);\n            actionToDispatch = actionToDispatch.concat([\n                errorDialogAction.setVisible(true),\n                errorDialogAction.setErrorMessage(errorMessage),\n            ]);\n        }\n\n        dispatch(batchActions(actionToDispatch));\n        listContent()(dispatch);\n    };\n}\n","/* eslint no-restricted-globals: 0 */\nimport { getPublicPathFor } from '../utils';\nexport class AtracdencProcess {\n    private messageCallback?: (ev: MessageEvent) => void;\n\n    constructor(public worker: Worker) {\n        worker.onmessage = this.handleMessage.bind(this);\n    }\n\n    async init() {\n        await new Promise<MessageEvent>(resolve => {\n            this.messageCallback = resolve;\n            this.worker.postMessage({ action: 'init' });\n        });\n    }\n\n    async encode(data: ArrayBuffer, bitrate: string) {\n        let eventData = await new Promise<MessageEvent>(resolve => {\n            this.messageCallback = resolve;\n            this.worker.postMessage({ action: 'encode', bitrate, data }, [data]);\n        });\n        return eventData.data.result as Uint8Array;\n    }\n\n    handleMessage(ev: MessageEvent) {\n        this.messageCallback!(ev);\n        this.messageCallback = undefined;\n    }\n}\n\nif (typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope) {\n    // Worker\n    let Module: any;\n    onmessage = async (ev: MessageEvent) => {\n        const { action, ...others } = ev.data;\n        if (action === 'init') {\n            self.importScripts(getPublicPathFor(`atracdenc.js`));\n            (self as any).Module().then((m: any) => {\n                Module = m;\n                self.postMessage({ action: 'init' });\n                Module.setLogger && Module.setLogger((msg: string, stream: string) => console.log(`${stream}: ${msg}`));\n            });\n        } else if (action === 'encode') {\n            const { bitrate, data } = others;\n            const inWavFile = `inWavFile.wav`;\n            const outAt3File = `outAt3File.aea`;\n            const dataArray = new Uint8Array(data);\n            Module.FS.writeFile(`${inWavFile}`, dataArray);\n            Module.callMain([`-e`, `atrac3`, `-i`, inWavFile, `-o`, outAt3File, `--bitrate`, bitrate]);\n\n            // Read file and trim header (96 bytes)\n            let fileStat = Module.FS.stat(outAt3File);\n            let size = fileStat.size;\n            let tmp = new Uint8Array(size - 96);\n            let outAt3FileStream = Module.FS.open(outAt3File, 'r');\n            Module.FS.read(outAt3FileStream, tmp, 0, tmp.length, 96);\n            Module.FS.close(outAt3FileStream);\n\n            let result = tmp.buffer;\n\n            self.postMessage(\n                {\n                    action: 'encode',\n                    result,\n                },\n                [result]\n            );\n            self.close();\n        }\n    };\n} else {\n    // Main\n}\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useShallowEqualSelector } from '../utils';\n\nimport { actions as appActions } from '../redux/app-feature';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport Link from '@material-ui/core/Link';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const AboutDialog = (props: {}) => {\n    const dispatch = useDispatch();\n\n    let visible = useShallowEqualSelector(state => state.appState.aboutDialogVisible);\n\n    const handleClose = () => {\n        dispatch(appActions.showAboutDialog(false));\n    };\n\n    return (\n        <Dialog\n            open={visible}\n            maxWidth={'sm'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"about-dialog-slide-title\"\n        >\n            <DialogTitle id=\"about-dialog-slide-title\">About Web MiniDisc</DialogTitle>\n            <DialogContent>\n                <DialogContentText>Web MiniDisc has been made possible by</DialogContentText>\n                <ul>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://www.ffmpeg.org/\" target=\"_blank\">\n                            FFmpeg\n                        </Link>{' '}\n                        and{' '}\n                        <Link rel=\"noopener noreferrer\" href=\"https://github.com/ffmpegjs/FFmpeg\" target=\"_blank\">\n                            ffmpegjs\n                        </Link>\n                        , to read your audio files (wav, mp3, ogg, mp4, etc...).\n                    </li>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://github.com/dcherednik/atracdenc/\" target=\"_blank\">\n                            Atracdenc\n                        </Link>\n                        , to support atrac3 encoding (lp2, lp4 audio formats).\n                    </li>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://emscripten.org/\" target=\"_blank\">\n                            Emscripten\n                        </Link>\n                        , to run both FFmpeg and Atracdenc in the browser.\n                    </li>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://github.com/cybercase/netmd-js\" target=\"_blank\">\n                            netmd-js\n                        </Link>\n                        , to send commands to NetMD devices using Javascript.\n                    </li>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://github.com/glaubitz/linux-minidisc\" target=\"_blank\">\n                            linux-minidisc\n                        </Link>\n                        , to make the netmd-js project possible.\n                    </li>\n                    <li>\n                        <Link rel=\"noopener noreferrer\" href=\"https://material-ui.com/\" target=\"_blank\">\n                            material-ui\n                        </Link>\n                        , to build the user interface.\n                    </li>\n                </ul>\n                <DialogContentText>Attribution</DialogContentText>\n                <ul>\n                    <li>\n                        MiniDisc logo from{' '}\n                        <Link rel=\"noopener noreferrer\" href=\"https://en.wikipedia.org/wiki/MiniDisc\" target=\"_blank\">\n                            https://en.wikipedia.org/wiki/MiniDisc\n                        </Link>\n                    </li>\n                    <li>\n                        MiniDisc icon from{' '}\n                        <Link\n                            rel=\"noopener noreferrer\"\n                            href=\"https://www.deviantart.com/blinkybill/art/Sony-MiniDisc-Plastic-Icon-473812540\"\n                            target=\"_blank\"\n                        >\n                            http://fav.me/d7u3g3g\n                        </Link>\n                    </li>\n                </ul>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { batchActions } from 'redux-batched-actions';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport { wipeDisc, listContent } from '../redux/actions';\nimport { actions as appActions } from '../redux/app-feature';\nimport { actions as renameDialogActions } from '../redux/rename-dialog-feature';\nimport { useShallowEqualSelector } from '../utils';\nimport Link from '@material-ui/core/Link';\n\nexport const TopMenu = function() {\n    const dispatch = useDispatch();\n\n    let { mainView } = useShallowEqualSelector(state => state.appState);\n    let disc = useShallowEqualSelector(state => state.main.disc);\n\n    const [menuAnchorEl, setMenuAnchorEl] = React.useState<null | HTMLElement>(null);\n    const menuOpen = Boolean(menuAnchorEl);\n    const handleMenuClick = (event: React.MouseEvent<HTMLElement>) => {\n        setMenuAnchorEl(event.currentTarget);\n    };\n\n    const handleMenuClose = () => {\n        setMenuAnchorEl(null);\n    };\n\n    const handleWipeDisc = () => {\n        dispatch(wipeDisc());\n        handleMenuClose();\n    };\n\n    const handleRefresh = () => {\n        dispatch(listContent());\n        handleMenuClose();\n    };\n\n    const handleRenameDisc = () => {\n        dispatch(\n            batchActions([\n                renameDialogActions.setVisible(true),\n                renameDialogActions.setCurrentName(disc?.title ?? ``),\n                renameDialogActions.setIndex(-1),\n            ])\n        );\n        handleMenuClose();\n    };\n\n    const handleExit = () => {\n        dispatch(appActions.setState('WELCOME'));\n        handleMenuClose();\n    };\n    const handleShowAbout = () => {\n        dispatch(appActions.showAboutDialog(true));\n        handleMenuClose();\n    };\n\n    const menuItems = [];\n    if (mainView === 'MAIN') {\n        menuItems.push(\n            <MenuItem key=\"update\" onClick={handleRefresh}>\n                Refresh\n            </MenuItem>\n        );\n        menuItems.push(\n            <MenuItem key=\"title\" onClick={handleRenameDisc}>\n                Rename Disc\n            </MenuItem>\n        );\n        menuItems.push(\n            <MenuItem key=\"wipe\" onClick={handleWipeDisc}>\n                Wipe Disc\n            </MenuItem>\n        );\n        menuItems.push(\n            <MenuItem key=\"exit\" onClick={handleExit}>\n                Exit\n            </MenuItem>\n        );\n    }\n    menuItems.push(\n        <MenuItem key=\"about\" onClick={handleShowAbout}>\n            About\n        </MenuItem>\n    );\n    menuItems.push(\n        <MenuItem key=\"github\" onClick={handleMenuClose}>\n            <Link rel=\"noopener noreferrer\" href=\"https://github.com/cybercase/webminidisc\" target=\"_blank\">\n                Fork me on GitHub\n            </Link>\n        </MenuItem>\n    );\n\n    return (\n        <React.Fragment>\n            <IconButton aria-label=\"actions\" aria-controls=\"actions-menu\" aria-haspopup=\"true\" onClick={handleMenuClick}>\n                <MoreVertIcon />\n            </IconButton>\n            <Menu id=\"actions-menu\" anchorEl={menuAnchorEl} keepMounted open={menuOpen} onClose={handleMenuClose}>\n                {menuItems}\n            </Menu>\n        </React.Fragment>\n    );\n};\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { pair } from '../redux/actions';\n\nimport { useShallowEqualSelector } from '../utils';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Box from '@material-ui/core/Box';\nimport Link from '@material-ui/core/Link';\n\nimport { AboutDialog } from './about-dialog';\nimport { TopMenu } from './topmenu';\nimport ChromeIconPath from '../images/chrome-icon.svg';\n\nconst useStyles = makeStyles(theme => ({\n    main: {\n        position: 'relative',\n        flex: '1 1 auto',\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    button: {\n        marginTop: theme.spacing(3),\n        minWidth: 150,\n    },\n    spacing: {\n        marginTop: theme.spacing(1),\n    },\n    chromeLogo: {\n        marginTop: theme.spacing(1),\n        width: 96,\n        height: 96,\n    },\n    why: {\n        alignSelf: 'flex-start',\n        marginTop: theme.spacing(3),\n    },\n    headBox: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n}));\n\nexport const Welcome = (props: {}) => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const { browserSupported, pairingFailed, pairingMessage } = useShallowEqualSelector(state => state.appState);\n    if (pairingMessage.toLowerCase().match(/denied/)) {\n        // show linux instructions\n    }\n    // Access denied.\n\n    const [showWhyUnsupported, setWhyUnsupported] = useState(false);\n    const handleLearnWhy = (event: React.SyntheticEvent) => {\n        event.preventDefault();\n        setWhyUnsupported(true);\n    };\n\n    return (\n        <React.Fragment>\n            <Box className={classes.headBox}>\n                <Typography component=\"h1\" variant=\"h4\">\n                    Web MiniDisc\n                </Typography>\n                <TopMenu />\n            </Box>\n            <Typography component=\"h2\" variant=\"body2\">\n                Brings NetMD Devices to the Web\n            </Typography>\n            <Box className={classes.main}>\n                {browserSupported ? (\n                    <React.Fragment>\n                        <Typography component=\"h2\" variant=\"subtitle1\" align=\"center\" className={classes.spacing}>\n                            Press the button to connect to a NetMD device\n                        </Typography>\n\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => dispatch(pair())} className={classes.button}>\n                            Connect\n                        </Button>\n\n                        <FormControl error={true} className={classes.spacing} style={{ visibility: pairingFailed ? 'visible' : 'hidden' }}>\n                            <FormHelperText>{pairingMessage}</FormHelperText>\n                        </FormControl>\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        <Typography component=\"h2\" variant=\"subtitle1\" align=\"center\" className={classes.spacing}>\n                            This Web browser is not supported.&nbsp;\n                            <Link rel=\"noopener noreferrer\" href=\"#\" onClick={handleLearnWhy}>\n                                Learn Why\n                            </Link>\n                        </Typography>\n\n                        <Link rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.google.com/chrome/\">\n                            <img alt=\"Chrome Logo\" src={ChromeIconPath} className={classes.chromeLogo} />\n                        </Link>\n\n                        <Typography component=\"h2\" variant=\"subtitle1\" align=\"center\" className={classes.spacing}>\n                            Try using{' '}\n                            <Link rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://www.google.com/chrome/\">\n                                Chrome\n                            </Link>{' '}\n                            instead\n                        </Typography>\n\n                        {showWhyUnsupported ? (\n                            <>\n                                <Typography component=\"p\" variant=\"body2\" className={classes.why}>\n                                    Web MiniDisc requires a browser that supports both{' '}\n                                    <Link rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://wicg.github.io/webusb/\">\n                                        WebUSB\n                                    </Link>{' '}\n                                    and{' '}\n                                    <Link rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://webassembly.org/\">\n                                        WebAssembly\n                                    </Link>\n                                    .\n                                </Typography>\n                                <ul>\n                                    <li>WebUSB is needed to control the NetMD device via the USB connection to your computer.</li>\n                                    <li>WebAssembly is used to convert the music to a MiniDisc compatible format</li>\n                                </ul>\n                            </>\n                        ) : null}\n                    </React.Fragment>\n                )}\n            </Box>\n            <AboutDialog />\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useShallowEqualSelector } from '../utils';\nimport { actions as renameDialogActions } from '../redux/rename-dialog-feature';\nimport { renameTrack, renameDisc } from '../redux/actions';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport TextField from '@material-ui/core/TextField';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const RenameDialog = (props: {}) => {\n    let dispatch = useDispatch();\n\n    let renameDialogVisible = useShallowEqualSelector(state => state.renameDialog.visible);\n    let renameDialogTitle = useShallowEqualSelector(state => state.renameDialog.title);\n    let renameDialogIndex = useShallowEqualSelector(state => state.renameDialog.index);\n\n    const what = renameDialogIndex < 0 ? `Disc` : `Track`;\n\n    const handleCancelRename = () => {\n        dispatch(renameDialogActions.setVisible(false));\n    };\n\n    const handleDoRename = () => {\n        if (renameDialogIndex < 0) {\n            dispatch(renameDisc({ newName: renameDialogTitle }));\n        } else {\n            dispatch(renameTrack({ index: renameDialogIndex, newName: renameDialogTitle }));\n        }\n    };\n\n    return (\n        <Dialog\n            open={renameDialogVisible}\n            onClose={handleCancelRename}\n            maxWidth={'sm'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"rename-dialog-title\"\n        >\n            <DialogTitle id=\"rename-dialog-title\">Rename {what}</DialogTitle>\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    id=\"name\"\n                    label={`${what} Name`}\n                    type=\"text\"\n                    fullWidth\n                    value={renameDialogTitle}\n                    onKeyDown={event => {\n                        event.key === `Enter` && handleDoRename();\n                    }}\n                    onChange={event => {\n                        dispatch(renameDialogActions.setCurrentName(event.target.value));\n                    }}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleCancelRename}>Cancel</Button>\n                <Button color={'primary'} onClick={handleDoRename}>\n                    Rename\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React from 'react';\nimport { useShallowEqualSelector } from '../utils';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Box from '@material-ui/core/Box';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    progressPerc: {\n        marginTop: theme.spacing(1),\n    },\n    progressBar: {\n        marginTop: theme.spacing(3),\n    },\n    uploadLabel: {\n        marginTop: theme.spacing(3),\n    },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const UploadDialog = (props: {}) => {\n    const classes = useStyles();\n\n    let {\n        visible,\n        writtenProgress,\n        encryptedProgress,\n        totalProgress,\n\n        trackTotal,\n        trackCurrent,\n        trackConverting,\n        titleCurrent,\n        titleConverting,\n    } = useShallowEqualSelector(state => state.uploadDialog);\n\n    let progressValue = Math.floor((writtenProgress / totalProgress) * 100);\n    let bufferValue = Math.floor((encryptedProgress / totalProgress) * 100);\n    let convertedValue = Math.floor((trackConverting / trackTotal) * 100);\n    return (\n        <Dialog\n            open={visible}\n            maxWidth={'sm'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"alert-dialog-slide-title\"\n            aria-describedby=\"alert-dialog-slide-description\"\n        >\n            <DialogTitle id=\"alert-dialog-slide-title\">Recording...</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">\n                    {convertedValue === 100 && trackConverting === trackTotal\n                        ? `Conversion completed`\n                        : `Converting ${trackConverting + 1} of ${trackTotal}: ${titleConverting}`}\n                </DialogContentText>\n                <LinearProgress\n                    className={classes.progressBar}\n                    variant={convertedValue === 0 ? 'indeterminate' : 'determinate'}\n                    color=\"primary\"\n                    value={convertedValue}\n                />\n                <Box className={classes.progressPerc}>{convertedValue}%</Box>\n\n                <DialogContentText id=\"alert-dialog-slide-description\" className={classes.uploadLabel}>\n                    Uploading {trackCurrent} of {trackTotal}: {titleCurrent}\n                </DialogContentText>\n                <LinearProgress\n                    className={classes.progressBar}\n                    variant=\"buffer\"\n                    color=\"secondary\"\n                    value={progressValue}\n                    valueBuffer={bufferValue}\n                />\n                <Box className={classes.progressPerc}>{progressValue}%</Box>\n            </DialogContent>\n            <DialogActions></DialogActions>\n        </Dialog>\n    );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useShallowEqualSelector } from '../utils';\n\nimport { actions as errorDialogActions } from '../redux/error-dialog-feature';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const ErrorDialog = (props: {}) => {\n    const dispatch = useDispatch();\n\n    let { visible, error } = useShallowEqualSelector(state => state.errorDialog);\n\n    const handleClose = () => {\n        dispatch(errorDialogActions.setVisible(false));\n    };\n\n    return (\n        <Dialog\n            open={visible}\n            maxWidth={'sm'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"error-dialog-slide-title\"\n            aria-describedby=\"error-dialog-slide-description\"\n        >\n            <DialogTitle id=\"alert-dialog-slide-title\">Error</DialogTitle>\n            <DialogContent>\n                <DialogContentText id=\"alert-dialog-slide-description\">{error}</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Close</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useShallowEqualSelector } from '../utils';\n\nimport { actions as convertDialogActions } from '../redux/convert-dialog-feature';\nimport { convertAndUpload } from '../redux/actions';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport Button from '@material-ui/core/Button';\nimport { makeStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst useStyles = makeStyles(theme => ({\n    container: {\n        display: 'flex',\n        flexDirection: 'row',\n    },\n    formControl: {\n        minWidth: 120,\n    },\n}));\n\nexport const ConvertDialog = (props: { files: File[] }) => {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    let { visible, format } = useShallowEqualSelector(state => state.convertDialog);\n\n    const handleClose = () => {\n        dispatch(convertDialogActions.setVisible(false));\n    };\n\n    const handleChange = (ev: React.ChangeEvent<{ value: unknown }>) => {\n        dispatch(convertDialogActions.setFormat(ev.target.value as string));\n    };\n\n    const handleConvert = () => {\n        handleClose();\n        dispatch(convertAndUpload(props.files, format));\n    };\n\n    return (\n        <Dialog\n            open={visible}\n            maxWidth={'xs'}\n            fullWidth={true}\n            TransitionComponent={Transition as any}\n            aria-labelledby=\"convert-dialog-slide-title\"\n            aria-describedby=\"convert-dialog-slide-description\"\n        >\n            <DialogTitle id=\"convert-dialog-slide-title\">Upload Settings</DialogTitle>\n            <DialogContent>\n                <FormControl className={classes.formControl}>\n                    <InputLabel color=\"secondary\" id=\"convert-dialog-format\">\n                        Format\n                    </InputLabel>\n                    <Select\n                        labelId=\"convert-dialog-format-label\"\n                        id=\"convert-dialog-format\"\n                        value={format}\n                        color=\"secondary\"\n                        onChange={handleChange}\n                        input={<Input />}\n                    >\n                        <MenuItem value={`SP`}>SP</MenuItem>\n                        <MenuItem value={`LP2`}>LP2</MenuItem>\n                        <MenuItem value={`LP4`}>LP4</MenuItem>\n                    </Select>\n                </FormControl>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button onClick={handleConvert}>Ok</Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n","import React, { useEffect, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport clsx from 'clsx';\nimport { useDropzone } from 'react-dropzone';\nimport { listContent, deleteTracks } from '../redux/actions';\nimport { actions as renameDialogActions } from '../redux/rename-dialog-feature';\nimport { actions as convertDialogActions } from '../redux/convert-dialog-feature';\n\nimport { formatTimeFromFrames, getTracks, Encoding } from 'netmd-js';\n\nimport { useShallowEqualSelector } from '../utils';\n\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport Backdrop from '@material-ui/core/Backdrop';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nimport IconButton from '@material-ui/core/IconButton';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport { batchActions } from 'redux-batched-actions';\n\nimport { RenameDialog } from './rename-dialog';\nimport { UploadDialog } from './upload-dialog';\nimport { ErrorDialog } from './error-dialog';\nimport { ConvertDialog } from './convert-dialog';\nimport { AboutDialog } from './about-dialog';\nimport { TopMenu } from './topmenu';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport * as BadgeImpl from '@material-ui/core/Badge/Badge';\n\nconst useStyles = makeStyles(theme => ({\n    add: {\n        position: 'absolute',\n        bottom: theme.spacing(3),\n        right: theme.spacing(3),\n    },\n    main: {\n        overflowY: 'auto',\n        flex: '1 1 auto',\n        marginBottom: theme.spacing(3),\n        marginLeft: theme.spacing(-2),\n        marginRight: theme.spacing(-2),\n        outline: 'none',\n    },\n    toolbar: {\n        marginTop: theme.spacing(3),\n        marginLeft: theme.spacing(-2),\n        marginRight: theme.spacing(-2),\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            marginLeft: theme.spacing(-3),\n            marginRight: theme.spacing(-3),\n        },\n    },\n    toolbarLabel: {\n        flex: '1 1 100%',\n    },\n    toolbarHighlight:\n        theme.palette.type === 'light'\n            ? {\n                  color: theme.palette.secondary.main,\n                  backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n              }\n            : {\n                  color: theme.palette.text.primary,\n                  backgroundColor: theme.palette.secondary.dark,\n              },\n    headBox: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    spacing: {\n        marginTop: theme.spacing(1),\n    },\n    formatBadge: {\n        ...(BadgeImpl as any).styles(theme).badge,\n        ...(BadgeImpl as any).styles(theme).colorPrimary,\n        position: 'static',\n        display: 'inline-flex',\n        border: `2px solid ${theme.palette.background.paper}`,\n        padding: '0 4px',\n    },\n    titleCell: {\n        overflow: 'hidden',\n        maxWidth: '40ch',\n        textOverflow: 'ellipsis',\n        // whiteSpace: 'nowrap',\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n}));\n\nconst EncodingName: { [k: number]: string } = {\n    [Encoding.sp]: 'SP',\n    [Encoding.lp2]: 'LP2',\n    [Encoding.lp4]: 'LP4',\n};\n\nexport const Main = (props: {}) => {\n    let dispatch = useDispatch();\n    let disc = useShallowEqualSelector(state => state.main.disc);\n    let deviceName = useShallowEqualSelector(state => state.main.deviceName);\n\n    const [selected, setSelected] = React.useState<number[]>([]);\n    const selectedCount = selected.length;\n\n    useEffect(() => {\n        dispatch(listContent());\n    }, [dispatch]);\n\n    useEffect(() => {\n        setSelected([]); // Reset selection if disc changes\n    }, [disc]);\n\n    let [uploadedFiles, setUploadedFiles] = React.useState<File[]>([]);\n    const onDrop = useCallback(\n        (acceptedFiles: File[], rejectedFiles: File[]) => {\n            setUploadedFiles(acceptedFiles);\n            dispatch(convertDialogActions.setVisible(true));\n        },\n        [dispatch]\n    );\n    const { getRootProps, getInputProps, isDragActive, open } = useDropzone({ onDrop, accept: `audio/*`, noClick: true });\n\n    const classes = useStyles();\n\n    let tracks: { index: number; title: string; group: string; duration: string; encoding: string }[] = [];\n    if (disc !== null) {\n        for (let group of disc.groups) {\n            for (let track of group.tracks) {\n                tracks.push({\n                    index: track.index,\n                    title: track.title ?? `Unknown Title`,\n                    group: group.title ?? ``,\n                    encoding: EncodingName[track.encoding],\n                    duration: formatTimeFromFrames(track.duration, false),\n                });\n            }\n        }\n    }\n\n    // Action Handlers\n    const handleSelectClick = (event: React.MouseEvent, item: number) => {\n        if (selected.includes(item)) {\n            setSelected(selected.filter(i => i !== item));\n        } else {\n            setSelected([...selected, item]);\n        }\n    };\n\n    const handleSelectAllClick = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if (selected.length < tracks.length) {\n            setSelected(tracks.map(t => t.index));\n        } else {\n            setSelected([]);\n        }\n    };\n\n    const handleRenameDoubleClick = (event: React.MouseEvent, item: number) => {\n        let selectedIndex = item;\n        let currentName = getTracks(disc!).find(track => track.index === selectedIndex)?.title ?? '';\n\n        dispatch(\n            batchActions([\n                renameDialogActions.setVisible(true),\n                renameDialogActions.setCurrentName(currentName),\n                renameDialogActions.setIndex(selectedIndex),\n            ])\n        );\n    };\n\n    const handleRenameActionClick = (event: React.MouseEvent) => {\n        handleRenameDoubleClick(event, selected[0]);\n    };\n\n    const handleDeleteSelected = (event: React.MouseEvent) => {\n        dispatch(deleteTracks(selected));\n    };\n\n    return (\n        <React.Fragment>\n            <Box className={classes.headBox}>\n                <Typography component=\"h1\" variant=\"h4\">\n                    {deviceName || `Loading...`}\n                </Typography>\n                <TopMenu />\n            </Box>\n            <Typography component=\"h2\" variant=\"body2\">\n                {disc !== null\n                    ? `${formatTimeFromFrames(disc.left, false)} left of ${formatTimeFromFrames(disc.total, false)}`\n                    : `Loading...`}\n            </Typography>\n            <Toolbar\n                className={clsx(classes.toolbar, {\n                    [classes.toolbarHighlight]: selectedCount > 0,\n                })}\n            >\n                {selectedCount > 0 ? (\n                    <Checkbox\n                        indeterminate={selectedCount > 0 && selectedCount < tracks.length}\n                        checked={selectedCount > 0}\n                        onChange={handleSelectAllClick}\n                        inputProps={{ 'aria-label': 'select all tracks' }}\n                    />\n                ) : null}\n                {selectedCount > 0 ? (\n                    <Typography className={classes.toolbarLabel} color=\"inherit\" variant=\"subtitle1\">\n                        {selectedCount} selected\n                    </Typography>\n                ) : (\n                    <Typography component=\"h3\" variant=\"h6\" className={classes.toolbarLabel}>\n                        {disc?.title || `Untitled Disc`}\n                    </Typography>\n                )}\n\n                {selectedCount > 0 ? (\n                    <Tooltip title=\"Delete\">\n                        <IconButton aria-label=\"delete\" onClick={handleDeleteSelected}>\n                            <DeleteIcon />\n                        </IconButton>\n                    </Tooltip>\n                ) : null}\n\n                {selectedCount > 0 ? (\n                    <Tooltip title=\"Rename\">\n                        <IconButton aria-label=\"rename\" disabled={selectedCount !== 1} onClick={handleRenameActionClick}>\n                            <EditIcon />\n                        </IconButton>\n                    </Tooltip>\n                ) : null}\n            </Toolbar>\n            <Box className={classes.main} {...getRootProps()}>\n                <input {...getInputProps()} />\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Title</TableCell>\n                            <TableCell>Format</TableCell>\n                            <TableCell align=\"right\">Duration</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tracks.map(track => (\n                            <TableRow\n                                hover\n                                selected={selected.includes(track.index)}\n                                key={track.index}\n                                onDoubleClick={event => handleRenameDoubleClick(event, track.index)}\n                                onClick={event => handleSelectClick(event, track.index)}\n                            >\n                                <TableCell className={classes.titleCell} title={track.title}>\n                                    {track.title || `No Title`}\n                                </TableCell>\n                                <TableCell>\n                                    <span className={classes.formatBadge}>{track.encoding}</span>\n                                </TableCell>\n                                <TableCell align=\"right\">{track.duration}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <Backdrop className={classes.backdrop} open={isDragActive}>\n                    Drop your Music to Upload\n                </Backdrop>\n            </Box>\n            <Fab color=\"primary\" aria-label=\"add\" className={classes.add} onClick={open}>\n                <AddIcon />\n            </Fab>\n\n            <UploadDialog />\n            <RenameDialog />\n            <ErrorDialog />\n            <ConvertDialog files={uploadedFiles} />\n            <AboutDialog />\n        </React.Fragment>\n    );\n};\n","import React from 'react';\nimport { useShallowEqualSelector } from '../utils';\nimport { actions as appActions } from '../redux/app-feature';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nimport { Welcome } from './welcome';\nimport { Main } from './main';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport Brightness2Icon from '@material-ui/icons/Brightness2';\nimport IconButton from '@material-ui/core/IconButton';\nimport { useDispatch } from 'react-redux';\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: 'auto',\n        height: '100%',\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            width: 600,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n        },\n    },\n\n    paper: {\n        position: 'relative',\n        display: 'flex',\n        flexDirection: 'column',\n        padding: theme.spacing(2),\n        height: '100%',\n        [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\n            marginTop: theme.spacing(6),\n            marginBottom: theme.spacing(6),\n            padding: theme.spacing(3),\n            height: 600,\n        },\n    },\n    copyright: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    backdrop: {\n        zIndex: theme.zIndex.drawer + 1,\n        color: '#fff',\n    },\n    minidiscLogo: {\n        width: 48,\n    },\n}));\n\nconst darkTheme = createMuiTheme({\n    palette: {\n        type: 'dark',\n        primary: {\n            light: '#6ec6ff',\n            main: '#2196f3',\n            dark: '#0069c0',\n            contrastText: '#fff',\n        },\n    },\n});\n\nconst lightTheme = createMuiTheme({\n    palette: {\n        type: 'light',\n    },\n});\n\nconst App = () => {\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    let { mainView, loading, darkMode } = useShallowEqualSelector(state => state.appState);\n\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\n                <CssBaseline />\n\n                <main className={classes.layout}>\n                    <Paper className={classes.paper}>\n                        {mainView === 'WELCOME' ? <Welcome /> : null}\n                        {mainView === 'MAIN' ? <Main /> : null}\n\n                        <Box className={classes.copyright}>\n                            <IconButton onClick={() => dispatch(appActions.setDarkMode(!darkMode))}>\n                                <Brightness2Icon color={darkMode ? 'secondary' : undefined} />\n                            </IconButton>\n                            <Typography variant=\"body2\" color=\"textSecondary\" style={{ marginRight: `8px` }}>\n                                {'© '}\n                                <Link rel=\"noopener noreferrer\" color=\"inherit\" target=\"_blank\" href=\"https://stefano.brilli.me/\">\n                                    Stefano Brilli\n                                </Link>{' '}\n                                {new Date().getFullYear()}\n                                {'.'}\n                            </Typography>\n                            <Link\n                                rel=\"noopener noreferrer\"\n                                href=\"https://twitter.com/share?ref_src=twsrc%5Etfw\"\n                                className=\"twitter-share-button\"\n                                data-via=\"thecybercase\"\n                                data-hashtags=\"MiniDisc\"\n                                data-dnt=\"true\"\n                                data-show-count=\"false\"\n                            >\n                                Tweet\n                            </Link>\n                            <Box style={{ flex: '1 1 auto' }}></Box>\n                        </Box>\n                    </Paper>\n                </main>\n\n                <Backdrop className={classes.backdrop} open={loading}>\n                    <CircularProgress color=\"inherit\" />\n                </Backdrop>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n};\n\nexport default App;\n","import { createWorker, setLogging } from '@ffmpeg/ffmpeg';\nimport { AtracdencProcess } from './atracdenc-worker';\nimport { getPublicPathFor } from '../utils';\nconst AtracdencWorker = require('worker-loader!./atracdenc-worker'); // eslint-disable-line import/no-webpack-loader-syntax\n\ninterface LogPayload {\n    message: string;\n    action: string;\n}\n\nexport interface AudioExportService {\n    init(): Promise<void>;\n    export(params: { format: string }): Promise<ArrayBuffer>;\n    info(): Promise<{ format: string | null; input: string | null }>;\n    prepare(file: File): Promise<void>;\n}\n\nexport class FFMpegAudioExportService implements AudioExportService {\n    public ffmpegProcess: any;\n    public atracdencProcess?: AtracdencProcess;\n    public loglines: { action: string; message: string }[] = [];\n    public inFileName: string = ``;\n    public outFileNameNoExt: string = ``;\n\n    async init() {\n        setLogging(true);\n    }\n\n    async prepare(file: File) {\n        this.loglines = [];\n        this.ffmpegProcess = createWorker({\n            logger: (payload: LogPayload) => {\n                this.loglines.push(payload);\n                console.log(payload.action, payload.message);\n            },\n            corePath: getPublicPathFor('ffmpeg-core.js'),\n            workerPath: getPublicPathFor('worker.min.js'),\n        });\n        await this.ffmpegProcess.load();\n\n        this.atracdencProcess = new AtracdencProcess(new AtracdencWorker());\n        await this.atracdencProcess.init();\n\n        let ext = file.name.split('.').slice(-1);\n        if (ext.length === 0) {\n            throw new Error(`Unrecognized file format: ${file.name}`);\n        }\n\n        this.inFileName = `inAudioFile.${ext[0]}`;\n        this.outFileNameNoExt = `outAudioFile`;\n\n        await this.ffmpegProcess.write(this.inFileName, file);\n    }\n\n    async info() {\n        await this.ffmpegProcess.transcode(this.inFileName, `${this.outFileNameNoExt}.metadata`, `-f ffmetadata`);\n\n        let audioFormatRegex = /Audio:\\s(.*?),/; // Actual content\n        let inputFormatRegex = /Input #0,\\s(.*?),/; // Container\n        let format: string | null = null;\n        let input: string | null = null;\n\n        for (let line of this.loglines) {\n            let match = line.message.match(audioFormatRegex);\n            if (match !== null) {\n                format = match[1];\n                continue;\n            }\n            match = line.message.match(inputFormatRegex);\n            if (match !== null) {\n                input = match[1];\n                continue;\n            }\n            if (format !== null && input !== null) {\n                break;\n            }\n        }\n\n        return { format, input };\n    }\n\n    async export({ format }: { format: string }) {\n        if (format === `SP`) {\n            const outFileName = `${this.outFileNameNoExt}.raw`;\n            await this.ffmpegProcess.transcode(this.inFileName, outFileName, '-f s16be -ar 44100');\n            let { data } = await this.ffmpegProcess.read(outFileName);\n            return data.buffer;\n        } else {\n            const outFileName = `${this.outFileNameNoExt}.wav`;\n            await this.ffmpegProcess.transcode(this.inFileName, outFileName, '-f wav -ar 44100');\n            let { data } = await this.ffmpegProcess.read(outFileName);\n            let bitrate: string = `0`;\n            switch (format) {\n                case `LP2`:\n                    bitrate = `128`;\n                    break;\n                case `LP105`:\n                    bitrate = `102`;\n                    break;\n                case `LP4`:\n                    bitrate = `64`;\n                    break;\n            }\n            let result = await this.atracdencProcess!.encode(data.buffer, bitrate);\n            return result;\n        }\n    }\n}\n","/* eslint no-restricted-globals: 0 */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\nimport { NetMDUSBService } from './services/netmd';\nimport serviceRegistry from './services/registry';\n\nimport { store } from './redux/store';\nimport { actions as appActions } from './redux/app-feature';\n\nimport App from './components/app';\n\nimport './index.css';\nimport { FFMpegAudioExportService } from './services/audio-export';\n\nserviceRegistry.netmdService = new NetMDUSBService();\nserviceRegistry.audioExportService = new FFMpegAudioExportService();\n\n(function setupEventHandlers() {\n    window.addEventListener('beforeunload', ev => {\n        let isUploading = store.getState().uploadDialog.visible;\n        if (!isUploading) {\n            return;\n        }\n        ev.preventDefault();\n        ev.returnValue = `Warning! Recording will be interrupted`;\n    });\n\n    if (navigator && navigator.usb) {\n        navigator.usb.ondisconnect = function() {\n            store.dispatch(appActions.setState('WELCOME'));\n        };\n    } else {\n        store.dispatch(appActions.setBrowserSupported(false));\n    }\n\n    // eslint-disable-next-line\n    let deferredPrompt: any;\n    window.addEventListener('beforeinstallprompt', (e: any) => {\n        e.preventDefault();\n        deferredPrompt = e;\n    });\n})();\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n);\n\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}